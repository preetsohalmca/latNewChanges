
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .selected-tr {
        background: hsl(43, 67%, 76%);
    }
</style>
<script type="text/javascript">
    function onDateChange() {
        //kendoConsole.log("Change :: " + kendo.toString(this.value(), 'd'));
        if (this.value()) {
            $('#reportDateError').hide();
        }
        else {
            $('#reportDateError').show();
        }
    }
</script>

    @Html.Partial("_SearchPO")

<div id="otherContent">
    <div class="col-md-12">
        <div class="row">
            <div id="tabstrip">
                <ul>
                    <li>
                        Dictionairies Management
                    </li>
                    <li>
                        User Management
                    </li>
                    <li class="k-state-active">
                        Invoice Report Management
                    </li>
                    <li id="latManagement">
                        LAT Metadata Management
                    </li>
                </ul>
                <div id="divDictionairieMgmt" style="height:100%;width:98%;">
                </div>
                <div id="divUserMgmt" style="height:100%;width:98%;">
                </div>
                <div id="divInvoiceReportMgmt" style="height:100%;width:98%;">
                    <div id="invoiceReportGrid"></div>
                    <button class="k-button" id="createInvoiceReportButton">Create Report File</button>
                    <button class="k-button" id="deleteInvoiceReportButton"> Delete Report</button>
                    <button class="k-button" id="downloadInvoiceReportButton"> Download Report</button>
                </div>
                <div id="divLATMetadataManagement" style="height:100%;width:98%;">
                    <div class="col-md-6">
                        <a href="#" id="lnkImportEBD" class=" btn btn-info">Import from EBD (Pure)</a>
                       <br />

                     <span id="dataImportSuccess" style="display:none;" class="alert-success" ><h4>Data successfully imported</h4></span>
                       
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="window">
        <table class="table">
            <tr>
                <td> Date:</td>
                <td>
                    @(Html.Kendo().DatePicker()
                                        .Name("selectedDate")
                                        .Value("")
                                        .Format("yyyy-MM")
                                        .Events(e =>
                                        {
                                            e.Change("onDateChange");
                                        })
                                        .HtmlAttributes(new { @class = "form-control", id = "selectedDate" })
                    )
                    <span id="reportDateError" style="display:none;" class="alert-danger">Date is a required field.</span>
                </td>
                @*<td>Path:</td>
            <td> <input type="text" id="txtBoxInvoicePath" onclick="performClick('theFile');"/></td>*@
                <td><button class="k-button" id="createInvoiceButton">Create</button></td>
                <td><button class="k-button" id="cancelInvoiceReportButton"> Cancel</button></td>
            </tr>
        </table>
    </div>

    <div id="importEBD">
        @using (Html.BeginForm("ImportData", "Poline", FormMethod.Post, new
        {
            enctype = "multipart/form-data"
        }))
        {<table class="table table-striped">
                <tr> <td> Choose Excel File: </td> <td> <input type="file" required  name="UploadedFile" /></td><td><input type="submit" class="btn btn-info" name="Import" value="Import" /></td> </tr>
                
            </table>
        }
    </div>


    <div id="target" class="loading" style="display:none;z-index:5000;">
        <div class="loading-overlay">
            <p class="loading-spinner">
                <span class="loading-icon"></span>
                <span class="loading-text">Invoice report generating. Please wait</span>
            </p>
        </div>
    </div>
</div>
<script type="text/javascript">

	function performClick(elemId) {
        var elem = document.getElementById(elemId);
        if (elem && document.createEvent) {
            var evt = document.createEvent("MouseEvents");
            evt.initEvent("click", true, false);
            elem.dispatchEvent(evt);
        }
    }

    function InvoicingReportDeleteViewModel(uid, ischecked) {
        this.InvoicingReportID = uid;

        this.IsDeleted = ischecked;
    }

    $(function () {

        //Import EBD
        var isImportedExcel = '@ViewBag.ExcelImported';
        var myimportEBD = $('#importEBD');
        $('#lnkImportEBD').click(function () {
            myimportEBD.data("kendoWindow").open().center();
        });

        //Kendo create invoice window
        var myWindow = $("#window"),
            createInvoiceReportButton = $("#createInvoiceReportButton");

        createInvoiceReportButton.click(function () {
            myWindow.data("kendoWindow").open().center();

        });
        $('#cancelInvoiceReportButton').on('click', function () {
            myWindow.data("kendoWindow").close();
            $('#reportDateError').hide();
        });

        $('#createInvoiceButton').on('click', function () {
            //target.loadingOverlay();
            var selectedDate = $("#selectedDate").data("kendoDatePicker").value();
            if (!selectedDate) {
                //$('#selectedDate').css('background', 'red');
                $('#reportDateError').show();
                return false;
            }
            else {
                //$('#selectedDate').css('background', 'none');
                $('#reportDateError').hide();
                $('#selectedDate').val('');
            }
            $("#target").show();
            myWindow.data("kendoWindow").close();
            
            $.ajax({
                type: "POST",
                url: "/POLine/GenerateInvoiceReport",
                contentType: 'application/json',
                dataType: "json",
                data: JSON.stringify({ selectedDate: selectedDate }),
                success: function (result) {
                    if (result.status) {
                        $("#target").hide();
                        //target.loadingOverlay('remove');
                        alert("Report saved successfully.")
                        myWindow.data("kendoWindow").close();
                        $("#invoiceReportGrid").data("kendoGrid").options.dataSource.read();
                    }
                    else {
                        $("#target").hide();
                        //target.loadingOverlay('remove');
                        alert("There is no new data to generate Invoice report.");
                        $('#reportDateError').hide();
                        myWindow.data("kendoWindow").close();
                    }
                },
                error: function (result) {
                    $("#target").hide();
                    //target.loadingOverlay('remove');
                    alert("There is no new data to generate Invoice report.");
                    $('#reportDateError').hide();
                    myWindow.data("kendoWindow").close();
                }
            });
        });

        $('#downloadInvoiceReportButton').on('click', function () {
            if (!$("#invoiceReportGrid tbody tr td").hasClass('selected-tr')) {
                return;
            }
            var invoceReports = [];
            $('#invoiceReportGrid').find('table tr').each(function () {
                if ($(this).find('td').hasClass('selected-tr')) {
                    if ($(this).length > 0) {
                        var $uid = $(this).find("td:nth-child(4)").text();
                        var $checkbox = ($(this).find(':checkbox'));
                        if ($uid != undefined) {
                            var uuid = "";
                            uuid = $uid;

                            invoceReports.push(new InvoicingReportDeleteViewModel($uid, true));
                        }
                    }
                }
            });
            
            if (invoceReports.length > 0) {
                $(location).attr('href', '@Url.Action("DownloadExcel", "POLine")?invoiceReportId=' + invoceReports[0].InvoicingReportID);
            }
        });

        function onClose() {
        }
        var window = $("#window").kendoWindow({
            title: "Create Invoicing Report",
            visible: false,
            width: "600px",
        }).data("kendoWindow");
        var importEBD = $("#importEBD").kendoWindow({
            title: "Import from EBD (Pure)",
            visible: false,
            width: "600px",
        }).data("kendoWindow");

        if (isImportedExcel) {
            var tabStrip = $("#tabstrip").kendoTabStrip().data("kendoTabStrip");
            tabStrip.select((tabStrip.tabGroup.children("li").length - 1));
            $('#dataImportSuccess').delay(3000).fadeOut();
            $('#UploadFile').val(null);
        }

        $("#tabstrip").kendoTabStrip({
            animation: {
                open: {
                    effects: "fadeIn"
                }
            }
        });

        $('#deleteInvoiceReportButton').on('click', function () {
            if (!$("#invoiceReportGrid tbody tr td").hasClass('selected-tr')) {
                return;
            }
            bootbox.confirm(
                {
                    message: "Do you really want to delete this selected invoice report?",
                    buttons: {
                        confirm: {
                            label: 'Delete',
                            className: 'btn-success'
                        },
                        cancel: {
                            label: 'Cancel',
                            className: 'btn-danger'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            var invoceReports = [];
                            $('#invoiceReportGrid').find('table tr').each(function () {
                                if ($(this).find('td').hasClass('selected-tr')) {
                                    if ($(this).length > 0) {
                                        var $uid = $(this).find("td:nth-child(4)").text();
                                        var $checkbox = ($(this).find(':checkbox'));
                                        if ($uid != undefined) {
                                            var uuid = "";
                                            uuid = $uid;

                                            invoceReports.push(new InvoicingReportDeleteViewModel($uid, true));
                                        }
                                    }
                                }
                            });
                            $.ajax({
                                type: "POST",
                                url: "/POLine/DeleteInvoiceReport",
                                contentType: 'application/json',
                                dataType: "json",
                                data: JSON.stringify({ invoceReports: invoceReports }),
                                success: function (result) {
                                    if (result && result.IsDeleted) {
                                        bootbox.alert("Data deleted successfully");
                                        $('#invoiceReportGrid').data('kendoGrid').dataSource.read();
                                        $('#invoiceReportGrid').data('kendoGrid').refresh();
                                    }
                                    else {
                                        alert("Something went wrong");
                                    }
                                },
                                error: function (result) {
                                    options.error(result);
                                }
                            });
                        }
                        else {
                            $("#invoiceReportGrid tbody tr td").each(function () {

                                $(this).removeClass('selected-tr');

                            });
                        }
                    }

                });

        });
        var grid = $("#invoiceReportGrid").kendoGrid({
            dataSource: new kendo.data.DataSource({
                //type: "odata",
                transport: {
                    read: function (options) {
                        $.ajax({
                            url: "/POLine/FillInvoiceReport",
                            dataType: "json",
                            //data: { poLineNumber: poLineId },
                            success: function (result) {
                                options.success(result.FillInvoiceReportObjList);
                            },
                            error: function (result) {
                                options.error(result);
                            }
                        });
                    }
                    //,
                    //destroy: function (options) {
                    //    $.ajax({
                    //        url: "/POLine/DeleteInvoiceReport",
                    //        dataType: "json",
                    //        data: { invoiceReportId: options.data.InvoiceReportId },
                    //        success: function (result) {
                    //            if (result && result.IsDeleted) {
                    //                alert("Data deleted successfully");
                    //            }
                    //            else {
                    //                alert("Something went wrong");
                    //            }
                    //        },
                    //        error: function (result) {
                    //            options.error(result);
                    //        }
                    //    })
                    //},
                }, pageSize: 25,
                selectable: "multiple",
                pageable: {
                    refresh: true,
                    pageSizes: true,
                    buttonCount: 15
                },
                scrollable: false,
                persistSelection: true,
                navigatable: true,
                schema: {
                    model: {
                        id: "InvoiceReportId",
                        fields: {
                            InvoiceReportID: { type: 'string' },
                            TimeStamp: { type: "string" },
                            Year: { type: "number" },
                            Month: { type: "number" }
                        }
                    }
                }
            }),
            height: 500,

            pageable: {
                refresh: true,
                pageSizes: true,
                buttonCount: 5
            },

            columns: [
                { field: "TimeStamp", title: "Time Stamp" },
                { field: "Year", title: "Year" },
                { field: "Month", title: "Month" },
                { field: "InvoiceReportID", hidden: true },

                //{
                //    command: [{
                //        name: "myDelete",
                //        text: "Delete",
                //        click: function (e) {
                //            var tr = $(e.target).closest("tr");
                //            var data = this.dataItem(tr);

                //            $("#invoiceReportGrid").on("click", ".k-grid-myConfirm", function () {
                //                //e.preventDefault();
                //                grid.dataSource.remove(data)
                //                grid.dataSource.sync();
                //                //grid.removeRow($(this).closest("tr"))
                //            });

                //            $("#invoiceReportGrid").on("click", ".k-grid-myCancel", function () {
                //                //e.preventDefault();
                //                grid.refresh();
                //            })
                //        }
                //    }], title: "&nbsp;", width: "350px"
                //}
            ]//,

            //dataBound: function () {
            //    $(".k-grid-myDelete span").addClass("k-icon k-delete");
            //},
            //cancel: function () {
            //    setTimeout(function () {
            //        $(".k-grid-myDelete span").addClass("k-icon k-delete");
            //    });
            //}
        }).data("kendoGrid");


        $("#invoiceReportGrid").on("click", ".k-grid-myDelete", function (e) {
            e.preventDefault();
            var command = $(this);
            var cell = command.closest("td");
            command.remove();
            cell.append('<a class="k-button k-button-icontext k-grid-myConfirm" href="#"><span class="k-icon k-update"></span>Confirm</a>');
            cell.append('<a class="k-button k-button-icontext k-grid-myCancel" href="#"><span class="k-icon k-cancel"></span>Cancel</a>');
        });

        $("#invoiceReportGrid tbody").on("click", "tr", function (e) {
            $("#invoiceReportGrid tbody tr td").each(function () {
                if (!$(this).find('td').hasClass('selected-tr')) {
                    $(this).removeClass('selected-tr');
                }
            });

            var grid = $("#invoiceReportGrid").data("kendoGrid");

            var lastRowUid = $(this).attr("data-uid");

            //find the target row element:
            var row = grid.table.find("[data-uid=" + lastRowUid + "]");
            if (!$(row).find('td').hasClass('selected-tr')) {
                $(row).find('td').addClass('selected-tr');
            }

        });
        var tabSelected = parseInt(@ViewBag.TabIndex);
        if (tabSelected > 0)
        {
            var tabStrip = $("#tabstrip").kendoTabStrip().data("kendoTabStrip");
            tabStrip.select((tabStrip.tabGroup.children("li").length - 1));
        }

    })




</script>

<style type="text/css">
    .k-grid-header, .k-header {
        background-color: grey;
        color: white;
    }

    .k-grid-pager {
        background-color: grey;
        color: white;
    }

    .loading .loading-spinner {
        position: absolute;
        top: 50%;
        bottom: 0;
        left: 0;
        right: 0;
        margin: -3.9375rem auto 0;
        color: #1a1d1d;
        text-align: center;
        z-index:5000;
    }

    .loading .loading-overlay {
        z-index:5000;
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        -webkit-animation: loadingStart 3s 300ms linear 1 both;
        -moz-animation: loadingStart 3s 300ms linear 1 both;
        -o-animation: loadingStart 3s 300ms linear 1 both;
        animation: loadingStart 3s 300ms linear 1 both;
        background: rgba(255, 255, 255, 0.25);
        text-align: center;
    }
    .loading .loading-icon {
        font-size: 4.8125rem;
        line-height: 5.25rem;
        text-shadow: rgba(255, 255, 255, 0.75) 0 0 0.5em;
        -webkit-animation: loading 1s steps(4) infinite;
        -moz-animation: loading 1s steps(4) infinite;
        -o-animation: loading 1s steps(4) infinite;
        animation: loading 1s steps(4) infinite;
        display: block;
        vertical-align: middle;
        z-index:5000;
    }
    .loading-text {
        font-size: 15px;
        line-height: 1.3125rem;
        text-shadow: white 0 0 1em, white 0 0 0.5em, white 0 0 0.25em;
        position: relative;
        text-transform: uppercase;
        font-weight: bold;
    }
    .loading .loading-text:after {
        content: "...";
    }
</style>
