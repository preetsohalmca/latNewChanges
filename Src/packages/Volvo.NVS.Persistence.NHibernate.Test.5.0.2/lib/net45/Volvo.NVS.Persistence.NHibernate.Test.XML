<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Volvo.NVS.Persistence.NHibernate.Test</name>
    </assembly>
    <members>
        <member name="T:Volvo.NVS.Signing.NVSLibrarySigning">
            <summary>
            Providing information about the current NVS Library signing (e.g. signing public key).
            </summary>
        </member>
        <member name="F:Volvo.NVS.Signing.NVSLibrarySigning.PublickKey">
            <summary>
            The public key used by all the library assemblies.
            </summary>
        </member>
        <member name="T:Volvo.NVS.Persistence.NHibernate.Test.GenericRepositoryTest`2">
            <summary>
            The class that performs the common tests on the repository.
            </summary>
            <typeparam name="TEntity">The type of the entity handled by the repository.</typeparam>
            <typeparam name="TId">The type of the ID of the <typeparamref name="TEntity"/>.</typeparam>
        </member>
        <member name="M:Volvo.NVS.Persistence.NHibernate.Test.GenericRepositoryTest`2.#ctor(Volvo.NVS.Persistence.Repositories.IGenericRepository{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:Volvo.NVS.Persistence.NHibernate.Test.GenericRepositoryTest`2"/> class.
            </summary>
            <param name="repository">The repository.</param>
        </member>
        <member name="M:Volvo.NVS.Persistence.NHibernate.Test.GenericRepositoryTest`2.SaveTest(`0)">
            <summary>
            Persists an entity in the database and retrieve it, validating the content.
            </summary>
            <param name="entity">The entity to persist.</param>
        </member>
        <member name="M:Volvo.NVS.Persistence.NHibernate.Test.GenericRepositoryTest`2.CreateAndUpdateOneProperty(`0,System.String,System.Object)">
            <summary>
            Persists an entity in the database, updates its property, persist it again and retrieves it, validating the content.
            </summary>
            <param name="entity">The entity to persist.</param>
            <param name="propertyName">The name of the property to update.</param>
            <param name="propertyValue">The new value to set on the <paramref name="propertyName"/>.</param>
        </member>
        <member name="M:Volvo.NVS.Persistence.NHibernate.Test.GenericRepositoryTest`2.CreateAndRemove(`0)">
            <summary>
            Persists an entity in the database, removes it and checks if entity was removed.
            </summary>
            <param name="entity">The entity to persist.</param>
        </member>
        <member name="M:Volvo.NVS.Persistence.NHibernate.Test.GenericRepositoryTest`2.CreateAndList(`0)">
            <summary>
            Persists an entity in the database and gets all the entities, validating the result.
            </summary>
            <param name="entity">The entity to persist.</param>
        </member>
        <member name="M:Volvo.NVS.Persistence.NHibernate.Test.GenericRepositoryTest`2.IncrementRowVersion(`0,System.String,System.Object)">
            <summary>
            Checks if the entity version property is properly incremented.
            </summary>
            <param name="entity">The entity to persist.</param>
            <param name="propertyName">The name of any property to update.</param>
            <param name="propertyValue">The new value to set on the <paramref name="propertyName"/>.</param>
        </member>
        <member name="T:Volvo.NVS.Persistence.NHibernate.Test.LocalDbTestHelper">
            <summary>
            The class used for test purposes to provide LocalDB databases.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Persistence.NHibernate.Test.LocalDbTestHelper.SetupDatabase(System.String,System.String,System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Creates a new database based on the provided assembly and an optional database file name.
            </summary>
            <param name="databaseName">The database name.</param>
            <param name="sessionFactoryName">The session factory name, used to handle multiple databases.</param>
            <param name="autoImport">Indicates whether unqualified class names of classes in this mapping will be used.</param>
            <param name="secondLevelCache">Indicaes whether second level cache should be enabled.</param>
            <remarks>
            Schema names have to be specified explicitely as the <see cref="T:NHibernate.Tool.hbm2ddl.SchemaExport"/> does not include scripts to create
            them.
            </remarks>
        </member>
        <member name="M:Volvo.NVS.Persistence.NHibernate.Test.LocalDbTestHelper.SetupDatabase(NHibernate.Mapping.IAuxiliaryDatabaseObject,System.String,System.String,System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Creates a new database based on the provided assembly and an optional database file name.
            </summary>
            <param name="auxiliaryDatabaseObject">The auxiliary database object.</param>
            <param name="databaseName">The database name.</param>
            <param name="sessionFactoryName">The session factory name, used to handle multiple databases.</param>
            <param name="autoImport">Indicates whether unqualified class names of classes in this mapping will be used.</param>
            <param name="secondLevelCache">Indicaes whether second level cache should be enabled.</param>
            <remarks>
            Schema names have to be specified explicitely as the <see cref="T:NHibernate.Tool.hbm2ddl.SchemaExport"/> does not include scripts to create
            them.
            </remarks>
        </member>
        <member name="M:Volvo.NVS.Persistence.NHibernate.Test.LocalDbTestHelper.SetupDatabase(System.Reflection.Assembly,System.String,System.String,System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Creates a new database based on the provided assembly and an optional database file name.
            </summary>
            <param name="assembly">The assembly where the mapping are defined.</param>
            <param name="databaseName">The database name.</param>
            <param name="sessionFactoryName">The session factory name, used to handle multiple databases.</param>
            <param name="autoImport">Indicates whether unqualified class names of classes in this mapping will be used.</param>
            <param name="secondLevelCache">Indicaes whether second level cache should be enabled.</param>
            <remarks>
            Schema names have to be specified explicitely as the <see cref="T:NHibernate.Tool.hbm2ddl.SchemaExport"/> does not include scripts to create
            them.
            </remarks>
        </member>
        <member name="M:Volvo.NVS.Persistence.NHibernate.Test.LocalDbTestHelper.SetupDatabase(System.Reflection.Assembly,NHibernate.Mapping.IAuxiliaryDatabaseObject,System.String,System.String,System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Creates a new database based on the provided assembly and an optional database file name.
            </summary>
            <param name="assembly">The assembly where the mapping are defined.</param>
            <param name="auxiliaryDatabaseObject">The auxiliary database object.</param>
            <param name="databaseName">The database name.</param>
            <param name="sessionFactoryName">The session factory name, used to handle multiple databases.</param>
            <param name="autoImport">Indicates whether unqualified class names of classes in this mapping will be used.</param>
            <param name="secondLevelCache">Indicaes whether second level cache should be enabled.</param>
            <remarks>
            Schema names have to be specified explicitely as the <see cref="T:NHibernate.Tool.hbm2ddl.SchemaExport"/> does not include scripts to create
            them.
            </remarks>
        </member>
        <member name="M:Volvo.NVS.Persistence.NHibernate.Test.LocalDbTestHelper.SetupDatabase(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.String,System.String,System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Creates a new database based on the provided assembly and an optional database file name.
            </summary>
            <param name="assemblies">The enumerable of <see cref="T:System.Reflection.Assembly"/> objects where the mapping are defined.</param>
            <param name="databaseName">The database name.</param>
            <param name="sessionFactoryName">The session factory name, used to handle multiple databases.</param>
            <param name="autoImport">Indicates whether unqualified class names of classes in this mapping will be used.</param>
            <param name="secondLevelCache">Indicaes whether second level cache should be enabled.</param>
            <remarks>
            Schema names have to be specified explicitely as the <see cref="T:NHibernate.Tool.hbm2ddl.SchemaExport"/> does not include scripts to create
            them.
            </remarks>
        </member>
        <member name="M:Volvo.NVS.Persistence.NHibernate.Test.LocalDbTestHelper.SetupDatabase(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},NHibernate.Mapping.IAuxiliaryDatabaseObject,System.String,System.String,System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Creates a new database based on the provided assembly and an optional database file name.
            </summary>
            <param name="assemblies">The enumerable of <see cref="T:System.Reflection.Assembly"/> objects where the mapping are defined.</param>
            <param name="auxiliaryDatabaseObject">The auxiliary database object.</param>
            <param name="databaseName">The database name.</param>
            <param name="sessionFactoryName">The session factory name, used to handle multiple databases.</param>
            <param name="autoImport">Indicates whether unqualified class names of classes in this mapping will be used.</param>
            <param name="secondLevelCache">Indicaes whether second level cache should be enabled.</param>
            <remarks>
            Schema names have to be specified explicitely as the <see cref="T:NHibernate.Tool.hbm2ddl.SchemaExport"/> does not include scripts to create
            them.
            </remarks>
        </member>
        <member name="M:Volvo.NVS.Persistence.NHibernate.Test.LocalDbTestHelper.CleanupDatabase(System.String)">
            <summary>
            Cleans up the database.
            </summary>
            <param name="databaseName">The database name.</param>
            <remarks>
            While during <see cref="M:Volvo.NVS.Persistence.NHibernate.Test.LocalDbTestHelper.SetupDatabase(System.String,System.String,System.Nullable{System.Boolean},System.Boolean)"/> the existing database is
            automatically dropped prior to its creation, you may want to explicitely cleanup the database yourself using this
            method.
            </remarks>
        </member>
        <member name="T:Volvo.NVS.Persistence.NHibernate.Test.SharedTestHelper">
            <summary>
            The shared functionalities of the test helpers.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Persistence.NHibernate.Test.SharedTestHelper.BuildConfig``2(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.String,NHibernate.Mapping.IAuxiliaryDatabaseObject,System.Nullable{System.Boolean},System.Boolean,System.Boolean)">
            <summary>
            Builds the test helper configuration.
            </summary>
            <typeparam name="TDialect">The type of SQL dialect to use.</typeparam>
            <typeparam name="TDriver">The type of SQL driver to use.</typeparam>
            <param name="assemblies">The enumerable of assemblies that should be mapped.</param>
            <param name="connectionString">The connection string.</param>
            <param name="auxiliaryDatabaseObject">The auxiliary database object.</param>
            <param name="autoImport">Indicates whether unqualified class names of classes in this mapping will be used.</param>
            <param name="secondLevelCache">Indicaes whether second level cache should be enabled.</param>
            <param name="ignoreProjections">Indicates whether projections should be ignored.</param>
            <returns>The configuration.</returns>
        </member>
        <member name="M:Volvo.NVS.Persistence.NHibernate.Test.SharedTestHelper.Initialize(NHibernate.ISessionFactory,NHibernate.Cfg.Configuration)">
            <summary>
            Initializes the database.
            </summary>
            <param name="factory">The session factory.</param>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="T:Volvo.NVS.Persistence.NHibernate.Test.SQLiteTestHelper">
            <summary>
            The class used for test purposes to provide in memory database using SQLite.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Persistence.NHibernate.Test.SQLiteTestHelper.SetupDatabase(System.Reflection.Assembly,System.String,System.String,System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Creates a new database based on the provided assembly and an optional database file name.
            </summary>
            <param name="assembly">The assembly where the mapping are defined.</param>
            <param name="databaseName">The database file name. If not provided, the in-memory database will be created.</param>
            <param name="sessionFactoryName">The session factory name, used to handle multiple databases.</param>
            <param name="autoImport">Indicates whether unqualified class names of classes in this mapping will be used.</param>
            <param name="secondLevelCache">Indicaes whether second level cache should be enabled.</param>
        </member>
        <member name="M:Volvo.NVS.Persistence.NHibernate.Test.SQLiteTestHelper.SetupDatabase(System.Reflection.Assembly,NHibernate.Mapping.IAuxiliaryDatabaseObject,System.String,System.String,System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Creates a new database based on the provided assembly and an optional database file name.
            </summary>
            <param name="assembly">The assembly where the mapping are defined.</param>
            <param name="auxiliaryDatabaseObject">The auxiliary database object.</param>
            <param name="databaseName">The database file name. If not provided, the in-memory database will be created.</param>
            <param name="sessionFactoryName">The session factory name, used to handle multiple databases.</param>
            <param name="autoImport">Indicates whether unqualified class names of classes in this mapping will be used.</param>
            <param name="secondLevelCache">Indicaes whether second level cache should be enabled.</param>
        </member>
        <member name="M:Volvo.NVS.Persistence.NHibernate.Test.SQLiteTestHelper.SetupDatabase(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.String,System.String,System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Creates a new database based on the provided assembly and an optional database file name.
            </summary>
            <param name="assemblies">The enumerable of <see cref="T:System.Reflection.Assembly"/> objects where the mapping are defined.</param>
            <param name="databaseName">The database file name. If not provided, the in-memory database will be created.</param>
            <param name="sessionFactoryName">The session factory name, used to handle multiple databases.</param>
            <param name="autoImport">Indicates whether unqualified class names of classes in this mapping will be used.</param>
            <param name="secondLevelCache">Indicaes whether second level cache should be enabled.</param>
        </member>
        <member name="M:Volvo.NVS.Persistence.NHibernate.Test.SQLiteTestHelper.SetupDatabase(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},NHibernate.Mapping.IAuxiliaryDatabaseObject,System.String,System.String,System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Creates a new database based on the provided assembly and an optional database file name.
            </summary>
            <param name="assemblies">The enumerable of <see cref="T:System.Reflection.Assembly"/> objects where the mapping are defined.</param>
            <param name="auxiliaryDatabaseObject">The auxiliary database object.</param>
            <param name="databaseName">The database file name. If not provided, the in-memory database will be created.</param>
            <param name="sessionFactoryName">The session factory name, used to handle multiple databases.</param>
            <param name="autoImport">Indicates whether unqualified class names of classes in this mapping will be used.</param>
            <param name="secondLevelCache">Indicaes whether second level cache should be enabled.</param>
        </member>
    </members>
</doc>
