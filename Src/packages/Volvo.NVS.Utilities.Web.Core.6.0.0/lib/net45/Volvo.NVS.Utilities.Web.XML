<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Volvo.NVS.Utilities.Web</name>
    </assembly>
    <members>
        <member name="T:Volvo.NVS.Core.Configuration.BundleLibraryConfigurator">
            <summary>
            Extends the common <see cref="T:Volvo.NVS.Core.Configuration.ILibraryConfigurator"/> contract providing the Bundling related fluent configuration methods.
            (requires Volvo.NVS.Utilities.Web)
            </summary>
            <remarks>
            <para>
            You never use this type directly. You use extensions methods provided by this class via types implementing the <see cref="T:Volvo.NVS.Core.Configuration.ILibraryConfigurator"/>
            which is extended by the <see cref="T:Volvo.NVS.Core.Configuration.BundleLibraryConfigurator"/>.
            </para>
            <para>
            <example>
            This example is configuring bundling using a custom bundle configuration service:
            <code>
            ILibraryConfigurator configurator = LibraryConfigurator.Current;
            ...
            configurator.ConfigureBundling(new MyBundleCollectionService());
            ...
            </code>
            </example>
            <para>
            See the <see cref="T:Volvo.NVS.Utilities.Web.Bundling.BundleConfig"/> for details about the bundle configuration services.
            </para>
            </para>
            </remarks>
        </member>
        <member name="M:Volvo.NVS.Core.Configuration.BundleLibraryConfigurator.ConfigureBundling(Volvo.NVS.Core.Configuration.ILibraryConfigurator,Volvo.NVS.Utilities.Web.Bundling.IBundleCollectionService)">
            <summary>
            Configures bundling and minification on the current <see cref="P:System.Web.Optimization.BundleTable.Bundles"/> using a given bundle configuration service 
            and running the complete configuration via the <see cref="T:Volvo.NVS.Utilities.Web.Bundling.BundleConfig"/>.
            </summary>
            <param name="configurator">The current common library configurator to be extended with the configuration method.</param>
            <param name="service">A service used to perform bundling and minification configuration.</param>
            <returns>The library configuration object.</returns>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Controllers.NVSController">
            <summary>
            Provides base Mvc <see cref="T:System.Web.Mvc.Controller"/> class used by NVS applications.
            </summary>
            <remarks>
            <para>
            Usage of the <see cref="T:Volvo.NVS.Utilities.Web.Controllers.NVSController"/> class is optional. One may still create controllers and derive from
            custom classes or from a standard <see cref="T:System.Web.Mvc.Controller"/> class.
            </para>
            <para>
            Usage of the <see cref="T:Volvo.NVS.Utilities.Web.Controllers.NVSController"/> may however help in the consumption of the NSV library specific functionalities.
            For example the class exposes the <see cref="P:Volvo.NVS.Utilities.Web.Controllers.NVSController.Messenger"/> property which can be used in place of the more
            complex (in usage) <see cref="M:Volvo.NVS.Utilities.Web.Messaging.ControllerBaseExtensions.GetMessenger(System.Web.Mvc.ControllerBase)"/> extension method.
            </para>
            <example>
            <para>
            The following creates an Mvc controller using the NVS controller base class. It also uses one of the helper properties
            (Messenger) exposed by this base class:
            </para>
            <code>
            public class SampleController : NVSController
            {
               public ActionResult Index()
               {
                  Messenger.AppendMessage("Hello from index");
                  return View("Hello");
               }
            }
            </code>
            </example>
            </remarks>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Controllers.NVSController.Messenger">
            <summary>
            Gives access into the flash messenger for the current <see cref="T:System.Web.HttpRequest"/>. Check also the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/>.
            </summary>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.CustomValidators.KendoRequiredAttribute">
            <summary>
            Extention for Required to also cover Kendo Widgets.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.CustomValidators.KendoRequiredAttribute.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
            <summary>
            Gets the validation rules used by the client side validation.
            </summary>
            <param name="metadata">The Model metadata.</param>
            <param name="context">The current controller context.</param>
            <returns>The client validation rules.</returns>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Extensions.HttpRequestExtensions">
            <summary>
            Provides extensions methods to the <see cref="T:System.Web.HttpRequestBase"/> class.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Extensions.HttpRequestExtensions.GetController(System.Web.HttpRequestBase)">
            <summary>
            Gets the controller name from the <see cref="T:System.Web.HttpRequestBase"/> request.
            </summary>
            <param name="request">The request to get the controller name from.</param>
            <returns>The controller name. Null in case there is no controller specified.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Extensions.HttpRequestExtensions.GetAction(System.Web.HttpRequestBase)">
            <summary>
            Gets the action name from the <see cref="T:System.Web.HttpRequestBase"/> request.
            </summary>
            <param name="request">The request to get the action name from.</param>
            <returns>The action name. Null in case there is no action specified.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Extensions.HttpRequestExtensions.GetRouteDataValue(System.Web.HttpRequestBase,System.String)">
            <summary>
            Gets a route data from the <see cref="T:System.Web.HttpRequestBase"/> request.
            </summary>
            <param name="request">The request to get the route data from.</param>
            <param name="key">The route data key to get value from</param>
            <returns>The route data if the key exists in the RouteData dictionary. Null otherwise.</returns>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Messaging.ControllerBaseExtensions">
            <summary>
            Provides <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/> related extension methods into the <see cref="T:System.Web.Mvc.ControllerBase"/> class.
            </summary>
            <remarks>
            Check the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/> documentation for details about flash messages.
            </remarks>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Messaging.ControllerBaseExtensions.FlashMessengerKeyName">
            <summary>
            Name of the key used on the <see cref="T:System.Web.HttpContext"/> in order to cache the flash messenger object.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.ControllerBaseExtensions.GetOrAddMessenger(System.Func{Volvo.NVS.Utilities.Web.Messaging.IFlashMessenger})">
            <summary>
            Creates a flash messenger and caches it on the current <see cref="T:System.Web.HttpContext"/> or returns the currently cached instance.
            </summary>
            <param name="factory">
            The factory used to create the messenger object when no cached item is found.
            </param>
            <returns>The flash messenger for the current request, http context.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.ControllerBaseExtensions.GetMessenger(System.Web.Mvc.ControllerBase)">
            <summary>
            Creates a flash messenger so custom, user messages can be added and displayed on the current or subsequent view(s).
            </summary>
            <param name="controller">
            The current controller object which should be extended with the messenger method.
            </param>
            <returns>
            The flash messenger managing user messages.
            </returns>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerCrossRequestDataProvider">
            <summary>
            Represents a base flash messenger data provider which initializes the underlying data store when it 
            has not been initialized yet and allows to pass collected data to subsequent requests. This class is abstract.
            </summary>
            <remarks>
            <para>
            The <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/> allows developers to add, collect messages which can later be displayed in the UI,
            on Views. In Mvc applications data passed into a View and having all the collected messages can be transferred via 
            Mvc models, view data, view temporary data or using similar separation. Abstraction is needed in order to follow 
            Mvc as the View should never has access into a controller object itself and should get data from model related medium.
            </para>
            <para>
            The <see cref="T:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerCrossRequestDataProvider"/> acts like an abstraction into the store so its implementation 
            can define how data should be passed (e.g. in Mvc applications - into a View from a Controller). It can also be used from the
            <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/> itself when messages should be collected.
            </para>
            <para>
            The <see cref="T:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerCrossRequestDataProvider"/> is a base and abstract implementation of the flash messenger data 
            provider. It ensures proper initialization of data and its store. It distinguishes between the current request data and
            subsequent request data store. It allows to store messages which should be passed to subsequent, next requests.
            </para>
            <para>
            The class determines if there is already a data set using the <see cref="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider.IsData"/> method.
            </para>
            <para>
            When there is no data yet then it is created using the <see cref="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider.CreateData"/> function. Such 
            data is then set on the underlaying flash messenger data stored by usage of the <see cref="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerCrossRequestDataProvider.SetCurrentRequestData(Volvo.NVS.Utilities.Web.Messaging.IFlashMessengerMessages)"/> method.
            The <see cref="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerCrossRequestDataProvider.SetCurrentRequestData(Volvo.NVS.Utilities.Web.Messaging.IFlashMessengerMessages)"/> should store data for the current request. The <see cref="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerCrossRequestDataProvider.SetCrossRequestData(Volvo.NVS.Utilities.Web.Messaging.IFlashMessengerMessages)"/>
            method is also executed and it should store data making it available for subsequent, next requests.
            </para>
            <para>
            The behaviour of the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerCrossRequestDataProvider"/> depends on the settings provided by the
            <see cref="F:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataSettings.PersistBetweenRequests"/> property. Using this one can turn propagation into the
            subsequent requests on or off.
            </para>
            <para>
            Every time new flash messages must be added it is done via the <see cref="P:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider.Data"/> property. The
            implementation of this property is provided by the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider"/> class.
            </para>
            <para>
            Every time messages must be displayed in the UI, in Views the <see cref="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider.GetDisplayData"/> function 
            is executed.
            </para>
            </remarks>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider">
            <summary>
            Represents a base flash messenger data provider which initializes the underlying data store when it 
            has not been initialized yet. This class is abstract.
            </summary>
            <remarks>
            <para>
            The <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/> allows developers to add, collect messages which can later be displayed in the UI,
            on Views. In Mvc applications data passed into a View and having all the collected messages can be transferred via 
            Mvc models, view data, view temporary data or using similar separation. Abstraction is needed in order to follow 
            Mvc as the View should never has access into a controller object itself and should get data from model related medium.
            </para>
            <para>
            The <see cref="T:Volvo.NVS.Utilities.Web.Messaging.Providers.IFlashMessengerDataProvider"/> acts like an abstraction into the store so its implementation can define
            how data should be passed (e.g. in Mvc applications - into a View from a Controller). It is also used from the
            <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/> itself when messages should be collected.
            </para>
            <para>
            The <see cref="T:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider"/> is abase and abstract implementation of the flash messenger data provider.
            It provides implementation of the <see cref="P:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider.Data"/> property ensuring proper initialization of data and its store.
            </para>
            <para>
            The class determines if there is already a data set using the <see cref="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider.IsData"/> method.
            </para>
            <para>
            When there is no data yet then it is created using the <see cref="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider.CreateData"/> function. Such data is then set on the
            underlaying flash messenger data stored by usage of the <see cref="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider.SetData(Volvo.NVS.Utilities.Web.Messaging.IFlashMessengerMessages)"/> method.
            </para>
            <para>
            Every time new flash messages must be added it is done via the <see cref="P:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider.Data"/> property. This implementation of this
            property is provided by the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider"/> class.
            </para>
            <para>
            Every time messages must be displayed in the UI, in Views the <see cref="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider.GetDisplayData"/> function is executed.
            </para>
            </remarks>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Messaging.Providers.IFlashMessengerDataProvider">
            <summary>
            Defines a contract for the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/> data providers. Data providers specify how flash 
            messages are stored and accessed from Views.
            </summary>
            <remarks>
            <para>
            The <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/> allows developers to add messages which can later be displayed in the UI.
            Those messages can for example be displayed in Mvc applications using one of the <see cref="T:System.Web.Mvc.HtmlHelper"/> 
            extension methods. As the Mvc html helper is accessed from a View and typically messages are added in Mvc
            Controllers we need a way to pass collected messages from a Controller into a View.
            </para>
            <para>
            The data passed into a View and having all the collected messages can be transferred via Mvc models, view data, view
            temporary data or using similar separation. Abstraction is needed in order to follow Mvc as the View should never 
            has access into a controller object itself and should get data from a model related medium.
            </para>
            <para>
            The <see cref="T:Volvo.NVS.Utilities.Web.Messaging.Providers.IFlashMessengerDataProvider"/> acts like an abstraction into the store so its implementation can define
            how data should be passed (e.g. in Mvc applications - into a View from a Controller).
            </para>
            <para>
            The <see cref="P:Volvo.NVS.Utilities.Web.Messaging.Providers.IFlashMessengerDataProvider.Data"/> property gives access into the collection where messages can be added, changed or removed.
            </para>
            <para>
            See also the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider"/> base class.
            </para>
            </remarks>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.Providers.IFlashMessengerDataProvider.GetDisplayData">
            <summary>
            Gets the collection of data (all the collected messages so far) which is used from Views
            in order to display the messages.
            </summary>
            <remarks>
            This method is only executed and should only be executed from Views. It may returns a copy
            or a read-only collection of all the collected flash messenger messages.
            </remarks>
            <returns>The collection of data used in Views in order to display the messages.</returns>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Messaging.Providers.IFlashMessengerDataProvider.Data">
            <summary>
            Gets the collection of flash messenger data available for the currently processing request.
            This property is used in order to manipulate the collection of messages (add, created, remove).
            </summary>
            <remarks>
            This property is used during the message creation process. The <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/>
            uses this property in order to add, get or remove messages from the data provider (store).
            The property should expose data available under and for the current <see cref="T:System.Web.HttpRequest"/>.
            </remarks>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider.IsData">
            <summary>
            Determines if data has already been stored on the underlaying data provider store.
            </summary>
            <remarks>
            <para>
            This method checks if data has been added into the store represented by the data provider class.
            When data has not been added yet then it is created and one of the set methods can be executed in
            order to set it on the store. When data is already added no set methods will execute as the 
            initialization process is secured to be run only once.
            </para>
            <para>
            See also the <see cref="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider.CreateData"/> and the <see cref="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider.SetData(Volvo.NVS.Utilities.Web.Messaging.IFlashMessengerMessages)"/> methods.
            </para>
            </remarks>
            <returns>True if data is initialized, added and is already traced by the flash messenger data provider.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider.CreateData">
            <summary>
            Creates data (messages) which should be stored and traced via the underlaying data provider store.
            </summary>
            <remarks>
            The method is executed if and only a provider reports that there is no data on the store yet. This
            is achieved via execution of the <see cref="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider.IsData"/> method.
            </remarks>
            <returns>The messages to be stored on the data provider.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider.SetData(Volvo.NVS.Utilities.Web.Messaging.IFlashMessengerMessages)">
            <summary>
            Sets data (messages) on the underlaying data provider store.
            </summary>
            <remarks>
            The data is set if and only if the data provider is reporting that it has not been initialized and
            set yet. This is determined via execution of the <see cref="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider.IsData"/> method. When it is determined
            that data has not been set yet then it is created first by the <see cref="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider.CreateData"/> function.
            </remarks>
            <param name="messages">The messages to be set and traced by the data provider.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider.GetData">
            <summary>
            Gets flash messenger data (messages) available for the currently processing request.
            This function is used in order to manipulate the collection of messages (add, created, remove).
            </summary>
            <returns>The collection of data used to alter the messages.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider.GetDisplayData">
            <summary>
            Gets the collection of data (all the collected messages so far) which is used from Views
            in order to display the messages.
            </summary>
            <remarks>
            This method is only executed and should only be executed from Views. It may returns a copy
            or a read-only collection of all the collected flash messenger messages.
            </remarks>
            <returns>The collection of data used in Views in order to display the messages.</returns>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider.Data">
            <summary>
            Gets the collection of flash messenger messages (data) available for the currently processing request.
            Initializes the collection if it has not been initialized yet. This property is used in order to manipulate
            the collection of messages (add, created, remove).
            </summary>
            <remarks>
            This property is used during the message creation process. The <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/>
            uses this property in order to add, get or remove messages from the data provider (store).
            </remarks>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerCrossRequestDataProvider.SetCurrentRequestData(Volvo.NVS.Utilities.Web.Messaging.IFlashMessengerMessages)">
            <summary>
            Sets data (messages) on the underlaying data provider store and for current request.
            </summary>
            <remarks>
            The data is set if and only if the data provider is reporting that it has not been initialized and
            set yet. This is determined via execution of the <see cref="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider.IsData"/> method. 
            When it is determined that data has not been set yet then it is created first by data creation function.
            </remarks>
            <param name="messages">The messages to be set and traced by the data provider.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerCrossRequestDataProvider.SetCrossRequestData(Volvo.NVS.Utilities.Web.Messaging.IFlashMessengerMessages)">
            <summary>
            Sets data (messages) on the underlaying data provider store and for subsequent, next requests.
            </summary>
            <remarks>
            The data is set if and only if the data provider is reporting that it has not been initialized and
            set yet. This is determined via execution of the <see cref="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataProvider.IsData"/> method. 
            When it is determined that data has not been set yet then it is created first by data creation function.
            </remarks>
            <param name="messages">The messages to be set and traced by the data provider.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerCrossRequestDataProvider.SetData(Volvo.NVS.Utilities.Web.Messaging.IFlashMessengerMessages)">
            <summary>
            Sets data (messages) on the underlaying data provider store making it available in the current and
            subsequent, next requests.
            </summary>
            <remarks>
            See the <see cref="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerCrossRequestDataProvider.SetCurrentRequestData(Volvo.NVS.Utilities.Web.Messaging.IFlashMessengerMessages)"/> and the <see cref="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerCrossRequestDataProvider.SetCrossRequestData(Volvo.NVS.Utilities.Web.Messaging.IFlashMessengerMessages)"/> methods.
            </remarks>
            <param name="messages">The messages to be set and traced by the data provider.</param>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataSettings">
            <summary>
            Holds settings for the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.Providers.IFlashMessengerDataProvider"/> implementations.
            </summary>
            <remarks>
            <para>
            The <see cref="T:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataSettings"/> manages common settings for the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.Providers.IFlashMessengerDataProvider"/> implementations.
            It steers globally (for a complete application domain) how the currently collected messages should be passed between views and controllers.
            </para>
            <para>
            For more details please check the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/> and the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.Providers.IFlashMessengerDataProvider"/>.
            </para>
            <para>
            The types of settings used from the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataSettings"/> depend on the used implementation of the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.Providers.IFlashMessengerDataProvider"/>.
            Not all flash messenger data providers may use all the settings. For details always refer into the implementation of the provider itself.
            </para>
            </remarks>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerDataSettings.PersistBetweenRequests">
            <summary>
            Determines if the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/> messages should be available on the subsequent requests.
            </summary>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Messaging.HtmlHelperExtensions">
            <summary>
            Provides <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/> related extension methods into the <see cref="T:System.Web.Mvc.HtmlHelper"/> class.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.HtmlHelperExtensions.GetProvider(System.Web.Mvc.HtmlHelper)">
            <summary>
            Returns the current flash messenger data provider.
            </summary>
            <param name="htmlHelper">The current context, html helper to be extended.</param>
            <returns>The flash messenger data provider.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.HtmlHelperExtensions.Summary(System.Web.Mvc.HtmlHelper)">
            <summary>
            Displays validation summary together with flash messages.
            </summary>
            <param name="htmlHelper">The Html helper to be extended.</param>
            <returns>The validation html and java script initialization code.</returns>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerMvcDataProvider">
            <summary>
            Represents an Mvc flash messenger data provider storing messages on the <see cref="T:System.Web.Mvc.ViewDataDictionary"/> and passing them
            to subsequent requests using the <see cref="T:System.Web.Mvc.TempDataDictionary"/>.
            </summary>
            <remarks>
            <para>
            The <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/> allows developers to add, collect messages which can later be displayed in the UI,
            on Views. In Mvc applications data passed into a View and having all the collected messages can be transferred via 
            Mvc models, view data, view temporary data or using similar separation. Abstraction is needed in order to follow 
            Mvc as the View should never has access into a controller object itself and should get data from model related medium.
            </para>
            <para>
            The <see cref="T:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerMvcDataProvider"/> acts like an abstraction into the store in Mvc applications. It defines
            how data should be passed into a View from a Controller. It is also used from the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/> itself 
            when messages should be collected.
            </para>
            <para>
            The <see cref="T:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerMvcDataProvider"/> is a Mvc specific implementation. It stores messages on the <see cref="T:System.Web.Mvc.ViewDataDictionary"/> 
            for the current request and passes messages to subsequent requests using the <see cref="T:System.Web.Mvc.TempDataDictionary"/>
            </para>
            </remarks>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerMvcDataProvider.FlashMessengerKeyName">
            <summary>
            A of the key used on the <see cref="T:System.Web.Mvc.ViewDataDictionary"/> and on the <see cref="T:System.Web.Mvc.TempDataDictionary"/>.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerMvcDataProvider.#ctor(System.Web.Mvc.ViewDataDictionary,System.Web.Mvc.TempDataDictionary)">
            <summary>
            Creates and instance of the flash messenger data provider designed for Mvc applications.
            </summary>
            <param name="viewData">A container that is used to pass data between a controller and a view.</param>
            <param name="tempData">A container that is used to persist data from one request to another.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerMvcDataProvider.IsData">
            <summary>
            Determines if data has already been stored on the underlaying data provider store (is initialized).
            </summary>
            <returns>True if data is already stored on the <see cref="T:System.Web.Mvc.ViewDataDictionary"/> and can be used from Views.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerMvcDataProvider.GetData">
            <summary>
            Gets flash messenger data (messages) available for the currently processing request.
            This function is used in order to manipulate the collection of messages (add, created, remove).
            </summary>
            <returns>The collection of data used to alter the messages.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerMvcDataProvider.GetTempData">
            <summary>
            Gets data stored on the <see cref="P:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerMvcDataProvider.TempData"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerMvcDataProvider.CreateData">
            <summary>
            Creates data (messages) which should be stored and traced via the underlaying data provider store.
            </summary>
            <returns>The messages to be stored on the data provider.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerMvcDataProvider.SetCurrentRequestData(Volvo.NVS.Utilities.Web.Messaging.IFlashMessengerMessages)">
            <summary>
            Sets data (messages) on the underlaying data provider store and for current request.
            </summary>
            <param name="messages">The messages to be set and traced by the data provider.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerMvcDataProvider.SetCrossRequestData(Volvo.NVS.Utilities.Web.Messaging.IFlashMessengerMessages)">
            <summary>
            Sets data (messages) on the underlaying data provider store making them available in subsequent, next requests.
            </summary>
            <param name="messages">The messages to be set and traced by the data provider.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerMvcDataProvider.GetDisplayData">
            <summary>
            Gets the collection of data (all the collected messages so far) which is used from Views
            in order to display the messages.
            </summary>
            <returns>The collection of data used in Views in order to display the messages.</returns>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerMvcDataProvider.ViewData">
            <summary>
            A container that is used to pass data between a controller and a view.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerMvcDataProvider.TempData">
            <summary>
            A container that is used to persist data from one request to another.
            </summary>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Messaging.RequestResultExtensions">
            <summary>
            This class implements extensions methods to help the usage of a <see cref="T:Volvo.NVS.Utilities.Web.Models.RequestResult"/> object and a <see cref="T:Volvo.NVS.Utilities.Web.Messaging.IFlashMessenger"/>.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.RequestResultExtensions.FillWithFlashMessages(Volvo.NVS.Utilities.Web.Models.RequestResult,Volvo.NVS.Utilities.Web.Messaging.IFlashMessenger)">
            <summary>
            Fill the <see cref="T:Volvo.NVS.Utilities.Web.Models.RequestResult"/> object with ALL messages from a given <see cref="T:Volvo.NVS.Utilities.Web.Messaging.IFlashMessenger"/>. It <b>removes</b> ALL returned messages from the ALL collections in the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.IFlashMessenger"/>.
            </summary>
            <param name="requestResult">The current instance of a <see cref="T:Volvo.NVS.Utilities.Web.Models.RequestResult"/>.</param>
            <param name="flashMessenger">An implementation of <see cref="T:Volvo.NVS.Utilities.Web.Messaging.IFlashMessenger"/> which will provide all Flash Messages.</param>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Models.RequestResult">
            <summary>
            A generic Request result object which can be returned as an action result to the client.
            </summary>
            <remarks>
            In a MVC controller action, one may need to return some result object in form of, for instance, a JsonResult.
            In such case, a <see cref="T:Volvo.NVS.Utilities.Web.Models.RequestResult"/> object can be used as the Data to be passed. See example below.
            <example>
            <code>
            public ActionResult SubmitOrder(long orderNumber)
            {
                var success = true;
                var domainOrder = OrderService.GetOrder(orderNumber);
                var validationResults = OrderService.GetValidationResults(domainOrder);
            
                if (validationResults.IsValid)
                {
                    OrderService.SubmitOrder(orderNumber);
                    FlashMessenger.AppendMessage(string.Format(OrderResource.Order_SubmitOrder_Success, orderNumber));
                }
                else
                {
                    foreach (var result in validationResults)
                        FlashMessenger.AppendMessage(result.Message, MessageType.Error);
                    
                    success = false;
                }
            
                return new JsonResult
                {
                    Data = new RequestResult
                    {
                        Success = success,
                        ErrorMessages = FlashMessenger.GetErrorMessages(),
                        WarningMessages = FlashMessenger.GetWarningMessages(),
                        InfoMessages = FlashMessenger.GetInfoMessages()
                    }
                };
                
                // Or you can use the extension for RequestResult
                var requestResult = new RequestResult { Success = success };
                requestResult.FillWithFlashMessages(FlashMessenger);
                return new JsonResult
                {
                    Data = requestResult
                };
            }
            </code>
            </example> 
            </remarks> 
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Models.RequestResult.Success">
            <summary>
            Informs if the result of the request is success or not.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Models.RequestResult.InfoMessages">
            <summary>
            The collection of Info messages to be returned to the client.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Models.RequestResult.ErrorMessages">
            <summary>
            The collection of Error messages to be returned to the client.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Models.RequestResult.WarningMessages">
            <summary>
            The collection of Warining messages to be returned to the client.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Models.RequestResult.Content">
            <summary>
            A generic content object, containing more information to be returned to the client.
            </summary>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Automapper.AutoMapperWebConfiguration">
            <summary>
            The class provides the global AutoMapper configuration capabilities specific for the ASP .NET Web applications only.
            In most cases one should use standard configuration methods from the fluent configuration interface.
            </summary>
            <remarks>
            <para>
            The AutoMapperWebConfiguration class provides AutoMapper configuration specific for Web applications only. It does not
            mean it always should be used in Web applications (only in exceptional and rare cases).
            </para>
            <para>
            It is always recommended to configure the AutoMapper globally using fluent library configuration and one of profile registration methods. 
            </para>
            <para>
            The <see cref="T:Volvo.NVS.Utilities.Web.Automapper.AutoMapperWebConfiguration"/> should only be used when no standard configuration methods suit your needs. Check the
            <see cref="T:Volvo.NVS.Utilities.Automapper.AutoMapperConfiguration"/> for configuration details.
            </para>
            </remarks>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Automapper.AutoMapperWebConfiguration.RegisterProfilesFromReferencedAssemblies">
            <summary>
            Registers the AutoMapper configuration profiles resolving all Profile objects from the Web Application Referenced Assemblies.
            </summary>
            <remarks>
            <para>
            The collection of assemblies that is scanned for the Profile classes includes assemblies specified in the assemblies element 
            of the Web.config file, assemblies built from custom code in the App_Code directory, and assemblies in other top-level folders.
            </para>
            <para>
            Please note it is recommended to use one of the <see cref="T:Volvo.NVS.Utilities.Automapper.AutoMapperConfiguration"/> registration methods wherever possible.
            Use this web app related method only if no other configuration scenario is fulfilling your needs.
            </para>
            </remarks>
        </member>
        <member name="T:Volvo.NVS.Utilities.Automapper.AutoMapperWebLibraryConfigurator">
            <summary>
            The class extends the <see cref="T:Volvo.NVS.Utilities.Automapper.IAutoMapperLibraryConfigurationBuilder"/> with the web related AutoMapper configuration methods.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Automapper.AutoMapperWebLibraryConfigurator.RegisterProfilesFromWebReferencedAssemblies(Volvo.NVS.Utilities.Automapper.IAutoMapperLibraryConfigurationBuilder)">
            <summary>
            Registers the AutoMapper configuration profiles resolving all Profile objects from the Web Application Referenced Assemblies.
            </summary>
            <remarks>
            <para>
            The collection of assemblies that is scanned for the Profile classes includes assemblies specified in the assemblies element 
            of the Web.config file, assemblies built from custom code in the App_Code directory, and assemblies in other top-level folders.
            </para>
            <para>
            Please note it is recommended to use one of the <see cref="T:Volvo.NVS.Utilities.Automapper.IAutoMapperLibraryConfigurationBuilder"/> methods not scanning referenced assemblies.
            Use this web app related method only if no other configuration scenario is fulfilling your needs.
            </para>
            </remarks>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Bundling.AsIsBundleOrderer">
            <summary>
            Orders files within a <see cref="T:System.Web.Optimization.Bundle"/> keeping the original, source order.
            </summary>
            <remarks>
            <para>
            Implementation of the <see cref="T:System.Web.Optimization.IBundleOrderer"/> defines methods for ordering files within a <see cref="T:System.Web.Optimization.Bundle"/>.
            The <see cref="T:Volvo.NVS.Utilities.Web.Bundling.AsIsBundleOrderer"/> class is one of the <see cref="T:System.Web.Optimization.IBundleOrderer"/> implementations. It ensures the
            original, current order of files within a <see cref="T:System.Web.Optimization.Bundle"/> remains untouched.
            </para>
            <para>
            In most of the cases you do not have to use the <see cref="T:Volvo.NVS.Utilities.Web.Bundling.AsIsBundleOrderer"/> class directly. One may use the 
            <see cref="M:Volvo.NVS.Utilities.Web.Bundling.BundleExtensions.DisableOrdering(System.Web.Optimization.Bundle)"/> extension method which configures the <see cref="T:Volvo.NVS.Utilities.Web.Bundling.AsIsBundleOrderer"/>
            on the current <see cref="T:System.Web.Optimization.Bundle"/>.
            </para>
            <para>
            See the <see cref="M:Volvo.NVS.Utilities.Web.Bundling.BundleExtensions.DisableOrdering(System.Web.Optimization.Bundle)"/> for details.
            </para>
            </remarks>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Bundling.AsIsBundleOrderer.OrderFiles(System.Web.Optimization.BundleContext,System.Collections.Generic.IEnumerable{System.Web.Optimization.BundleFile})">
            <summary>
            Orders the files within a <see cref="T:System.Web.Optimization.Bundle"/> keeping the original, source order.
            </summary>
            <param name="context">The <see cref="T:System.Web.Optimization.BundleContext"/> object that contains state for both the framework configuration and the HTTP request.</param>
            <param name="files">The files contained in the bundle.</param>
            <returns>An ordered enumeration of bundle files.</returns>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Bundling.BundleCollectionServiceBase">
            <summary>
            Acts like a base class for bundle configuration services.
            </summary>
            <remarks>
            <para>
            Applications may define their own bundle configuration service classes. In order to achieve this the class
            can derive from the <see cref="T:Volvo.NVS.Utilities.Web.Bundling.BundleCollectionServiceBase"/> or may implement the <see cref="T:Volvo.NVS.Utilities.Web.Bundling.IBundleCollectionService"/>
            interface directly.
            </para>
            <para>
            The <see cref="T:Volvo.NVS.Utilities.Web.Bundling.BundleCollectionServiceBase"/> provides base implementation for a bundle configuration service. It adds common
            java scripts files into the ignore bundle list.
            </para>
            <para>
            Bundle services can be passed to and used from the <see cref="T:Volvo.NVS.Utilities.Web.Bundling.BundleConfig"/>. It is a <see cref="T:Volvo.NVS.Utilities.Web.Bundling.BundleConfig"/> class which
            steers and runs the bundle configuration using a given bundle configuration service.
            </para>
            <para>
            Use the <see cref="T:Volvo.NVS.Utilities.Web.Bundling.BundleConfig"/> to configure bundles via the bundle service. Check the <see cref="T:Volvo.NVS.Utilities.Web.Bundling.BundleConfig"/> for details.
            </para>
            </remarks>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Bundling.IBundleCollectionService">
            <summary>
            Defines a contract for <see cref="T:System.Web.Optimization.Bundle"/> configuration services. Such services abstract and simplify
            bundle configuration while used together with the <see cref="T:Volvo.NVS.Utilities.Web.Bundling.BundleConfig"/>.
            </summary>
            <remarks>
            <para>
            Types implementing the <see cref="T:Volvo.NVS.Utilities.Web.Bundling.IBundleCollectionService"/> can be passed to and used via the <see cref="T:Volvo.NVS.Utilities.Web.Bundling.BundleConfig"/>
            class. The <see cref="T:Volvo.NVS.Utilities.Web.Bundling.BundleConfig"/> class simplifies and centralizes configuration of bundling.
            </para>
            Check the <see cref="T:Volvo.NVS.Utilities.Web.Bundling.BundleConfig"/> for details.
            </remarks>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Bundling.IBundleCollectionService.ConfigureIgnoreList(System.Web.Optimization.BundleCollection)">
            <summary>
            Configures the bundle ignore list.
            </summary>
            <remarks>
            Implementation of this method should add ignore items into the bundles. Example:
            <code>
            bundles.IgnoreList.Ignore("*.intellisense.js");
            </code>
            </remarks>
            <param name="bundles">The BundleCollection to be modified.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Bundling.IBundleCollectionService.RegisterScriptBundles(System.Web.Optimization.BundleCollection)">
            <summary>
            Registers all JavaScript bundles.
            </summary>
            <remarks>
            Implementation of this method should add java script items into the bundles. Example:
            <code>
            bundles.Add(new ScriptBundle("~/Scripts/Js/CommonJsBundle").Include(
               "~/Scripts/jquery-{version}.min.js",
               "~/Scripts/nvs/nvs.common.js"));
            </code>
            </remarks>
            <param name="bundles">The BundleCollection to be modified.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Bundling.IBundleCollectionService.RegisterStyleBundles(System.Web.Optimization.BundleCollection)">
            <summary>
            Registers all Style bundles.
            </summary>
            <remarks>
            Implementation of this method should add style items into the bundles. Example:
            <code>
            bundles.Add(new StyleBundle(""~/Content/nvs/{0}/CssBundle"").Include(
               "~/Content/nvs/nvs.base.common.css"));
            </code>
            </remarks>
            <param name="bundles">The BundleCollection to be modified.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Bundling.BundleCollectionServiceBase.ConfigureIgnoreList(System.Web.Optimization.BundleCollection)">
            <summary>
            Configures the bundle ignore list. Adds intellisense, debug and document related javascripts into the ignored list.
            </summary>
            <remarks>
            Implementation of this method should add ignore items into the bundles. Example:
            <code>
            bundles.IgnoreList.Ignore("*.intellisense.js");
            </code>
            </remarks>
            <param name="bundles">The BundleCollection to be modified.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Bundling.BundleCollectionServiceBase.RegisterScriptBundles(System.Web.Optimization.BundleCollection)">
            <summary>
            Registers all JavaScript bundles.
            </summary>
            <remarks>
            Implementation of this method should add java script items into the bundles. Example:
            <code>
            bundles.Add(new ScriptBundle("~/Scripts/Js/CommonJsBundle").Include(
               "~/Scripts/jquery-{version}.min.js",
               "~/Scripts/nvs/nvs.common.js"));
            </code>
            </remarks>
            <param name="bundles">The BundleCollection to be modified.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Bundling.BundleCollectionServiceBase.RegisterStyleBundles(System.Web.Optimization.BundleCollection)">
            <summary>
            Registers all Style bundles.
            </summary>
            <remarks>
            Implementation of this method should add style items into the bundles. Example:
            <code>
            bundles.Add(new StyleBundle(""~/Content/nvs/{0}/CssBundle"").Include(
               "~/Content/nvs/nvs.base.common.css"));
            </code>
            </remarks>
            <param name="bundles">The BundleCollection to be modified.</param>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Bundling.BundleConfig">
            <summary>
            A <see cref="T:System.Web.Optimization.Bundle"/> configurator simplifying and abstracting configuration of all web application bundles.
            The class configures <see cref="T:System.Web.Optimization.BundleCollection"/> using <see cref="T:Volvo.NVS.Utilities.Web.Bundling.IBundleCollectionService"/>.
            </summary>
            <remarks>
            <para>
            An application may define its own bundle configuration service. Such a service configures all the bundles within
            the web application. In order to create a bundle configuration service the class derived from the <see cref="T:Volvo.NVS.Utilities.Web.Bundling.BundleCollectionServiceBase"/>
            can be created. It is also possible to implement the <see cref="T:Volvo.NVS.Utilities.Web.Bundling.IBundleCollectionService"/> interface directly. For
            more details about the bundle configuration services check the <see cref="T:Volvo.NVS.Utilities.Web.Bundling.BundleCollectionServiceBase"/> class.
            </para>
            <para>
            Once the service class is created the <see cref="T:Volvo.NVS.Utilities.Web.Bundling.BundleConfig"/> can be used to perform the configuration. The <see cref="T:Volvo.NVS.Utilities.Web.Bundling.BundleConfig"/>
            requires and uses the service in order to run the configuration.
            </para>
            <para>
            For more information on Bundling and minification, including external references, tips and tricks and more, visit our Web Client Wiki page at
            https://teamplace.volvo.com/sites/volvoit-dotNET/Web%20client%20wiki/MVC%204%20Bundling%20and%20Minification.aspx
            </para>
            <para>
            <example>
            This example is configuring bundling using a custom bundle configuration service and the fluent library configuration interface.
            Using fluent library configuration is the recommended approach.
            <code>
            ILibraryConfigurator configurator = LibraryConfigurator.Current;
            ...
            configurator.ConfigureBundling(new MyBundleCollectionService());
            ...
            </code>
            </example>
            <example>
            One may also register all bundles at the application startup using the following code:
            <code>
            Container.Resolve&lt;IBundleConfig&gt;().InitializeBundles(BundleTable.Bundles);
            </code>
            The sample assumes the BundleConfig is registered in unity as well as the <see cref="T:Volvo.NVS.Utilities.Web.Bundling.IBundleCollectionService"/> is also registered.
            </example>
            </para>
            <para>
            <example>
            One may register all bundles at the application startup creating the configuration object directly.
            </example>
            <code>
            var config = new BundleConfig(new MyBundleService());
            config.InitializeBundles(BundleTable.Bundles);
            </code>
            </para>
            </remarks>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Bundling.IBundleConfig">
            <summary>
            Defines a contract for a bundle configurator. Bundle configurator types (such as the <see cref="T:Volvo.NVS.Utilities.Web.Bundling.BundleConfig"/>)
            simplifies and centralizes configuration of all bundles in web applications.
            </summary>
            <remarks>
            See the <see cref="T:Volvo.NVS.Utilities.Web.Bundling.BundleConfig"/> for details.
            </remarks>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Bundling.IBundleConfig.InitializeBundles(System.Web.Optimization.BundleCollection)">
            <summary>
            Initializes the <see cref="T:System.Web.Optimization.BundleCollection"/> and sets up all the bundles according to the current <see cref="T:Volvo.NVS.Utilities.Web.Bundling.IBundleCollectionService"/>.
            </summary>
            <param name="bundles">The BundleCollection to be configured.</param>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Bundling.BundleConfig.bundleCollectionService">
            <summary>
            The service providing information about bundles
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Bundling.BundleConfig.#ctor(Volvo.NVS.Utilities.Web.Bundling.IBundleCollectionService)">
            <summary>
            Constructor where a custom IBundleCollectionService can be passed.
            </summary>
            <param name="bundleCollectionService">A custom IBundleCollectionService object</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Bundling.BundleConfig.InitializeBundles(System.Web.Optimization.BundleCollection)">
            <summary>
            Initializes the <see cref="T:System.Web.Optimization.BundleCollection"/> and sets up all the bundles according to the current <see cref="T:Volvo.NVS.Utilities.Web.Bundling.IBundleCollectionService"/>.
            </summary>
            <param name="bundles">The BundleCollection to be configured.</param>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Bundling.CssRewriteUrlTransformWrapper">
            <summary>
            Wraps the <see cref="T:System.Web.Optimization.CssRewriteUrlTransform"/> fixing its path limitation issue.
            </summary>
            <remarks>
            The <see cref="T:Volvo.NVS.Utilities.Web.Bundling.CssRewriteUrlTransformWrapper"/> implements the method that transforms the item in a bundle response object.
            It wraps the original <see cref="T:System.Web.Optimization.CssRewriteUrlTransform"/>. The <see cref="T:System.Web.Optimization.CssRewriteUrlTransform"/> converts relative paths
            (e.g.: paths of images) present in the css to absolute paths. But this has limitation when a virtual directory or a subdirectory 
            is created when hosting the application. The <see cref="T:Volvo.NVS.Utilities.Web.Bundling.CssRewriteUrlTransformWrapper"/> resolves this issue by resolving all 
            paths in to the actual paths.
            </remarks>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Bundling.CssRewriteUrlTransformWrapper.Process(System.String,System.String)">
            <summary>
            Converts the relative path to the actual path(virtual path + absolute path)
            </summary>
            <param name="includedVirtualPath">The virtual path.</param>
            <param name="input">CSS Content</param>
            <returns></returns>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Cookies.HttpContextBaseCookieExtensions">
            <summary>
            Provides cookie related extension methods into the <see cref="T:System.Web.HttpContextBase"/> class.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.HttpContextBaseCookieExtensions.GetCookie(System.Web.HttpContextBase,System.String)">
            <summary>
            Returns the already existing cookie or null when there is no cookie on the Http Request.
            </summary>
            <param name="context">The current Http Context.</param>
            <param name="name">The name of the cookie we are looking for.</param>
            <returns>Returns the cookie associated with the name. If the cookie does not exist, null is returned.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.HttpContextBaseCookieExtensions.GetOrCreateCookie(System.Web.HttpContextBase,System.String,System.Boolean)">
            <summary>
            Returns the already existing cookie from the Http Request or creates a new one.
            </summary>
            <remarks>
            <para>
            The expiration date for the new cookie will be set to the maximum possible value.
            </para>
            <para>
            The new cookie will always be configured to be the Http Only cookie due to security reasons.
            </para>
            <para>
            If the cookie already exists it will be unaffected by the provided parameters e.g. by the <paramref name="secure"/> parameter.
            </para>
            </remarks>
            <param name="context">The current Http Context.</param>
            <param name="name">The name of the cookie for which we are looking for and the name of the new cookie if it does not already exists.</param>
            <param name="secure">Determines if a new cookie should be transferred using Secure Socket Layer (SSL). It does not affect already existing cookies.</param>
            <returns>The existing cookie object or a new one.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.HttpContextBaseCookieExtensions.GetOrCreateCookie(System.Web.HttpContextBase,System.String)">
            <summary>
            Returns the already existing cookie from the Http Request or creates a new one with default parameters.
            </summary>
            <remarks>
            <para>
            When there is no cookie with a given name a new one will be created with default values.
            </para>
            <para>
            A new cookie will not be forced to use the Secure Socket Layer when transferred.
            The expiration date of the new cookie will be set to the maximum possible value.
            The new cookie will always be configured to be the Http Only cookie due to security reasons.
            </para>
            </remarks>
            <param name="context">The current HttpContext.</param>
            <param name="name">The name of the cookie we are looking for.</param>
            <returns>The existing or new cookie.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.HttpContextBaseCookieExtensions.SetCookieOnResponse(System.Web.HttpContextBase,System.Web.HttpCookie)">
            <summary>
            Sets a cookie on the Http Response.
            </summary>
            <remarks>
            No cookie object is affected and modified by the method. It is only set on the response object.
            </remarks>
            <param name="context">The current HttpContext.</param>
            <param name="cookie">The cookie to be set on the Http Response.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.HttpContextBaseCookieExtensions.SetCookie(System.Web.HttpContextBase,System.Web.HttpCookie,System.DateTime,System.Boolean)">
            <summary>
            Sets a cookie on the Http Response and updates it to use the default parameters and according to provided
            <paramref name="expires"/> and <paramref name="secure"/> options.
            </summary>
            <remarks>
            <para>
            The cookie object will always be set to be the Http Only cookie due to security reasons. The rest of cookie object
            settings will be modified according to the provided parameters e.g. <paramref name="expires"/> and <paramref name="secure"/>.
            </para>
            </remarks>
            <param name="context">The current Http Context.</param>
            <param name="cookie">The cookie to be set on the Http Response.</param>
            <param name="expires">The expiration data and time for the cookie.</param>
            <param name="secure">Determines if the cookie should be transferred using Secure Socket Layer (SSL) or not.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.HttpContextBaseCookieExtensions.SetCookie(System.Web.HttpContextBase,System.Web.HttpCookie,System.Boolean)">
            <summary>
            Sets a cookie on the Http Response and updates it to use the default parameters and according to provided
            <paramref name="secure"/> options.
            </summary>
            <remarks>
            <para>
            The cookie object will always be set to be the Http Only cookie due to security reasons. Its expiration date will
            always be set to the possible maximum value. The rest of cookie object settings will be modified according to the
            provided parameters e.g. <paramref name="secure"/>.
            </para>
            </remarks>
            <param name="context">The current Http Context.</param>
            <param name="cookie">The cookie to be set on the Http Response.</param>
            <param name="secure">Determines if the cookie should be transferred using Secure Socket Layer (SSL) or not.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.HttpContextBaseCookieExtensions.SetCookie(System.Web.HttpContextBase,System.Web.HttpCookie,System.DateTime)">
            <summary>
            Sets a cookie on the Http Response and updates it to use the default parameters and according to provided
            <paramref name="expires"/> option.
            </summary>
            <remarks>
            <para>
            The cookie object will always be set to be the Http Only cookie due to security reasons. It will always be set not
            to use the Secure Socket Layer. The rest of cookie object settings will be modified according to the
            provided parameters e.g. <paramref name="expires"/>.
            </para>
            </remarks>
            <param name="context">The current Http Context.</param>
            <param name="cookie">The cookie to be set on the Http Response.</param>
            <param name="expires">The expiration data and time for the cookie.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.HttpContextBaseCookieExtensions.SetCookie(System.Web.HttpContextBase,System.Web.HttpCookie)">
            <summary>
            Sets a cookie on the Http Response and updates it with the default settings.
            The cookie expiration date is set to the maximum one. The cookie will not be 
            forced to use the Secure Socket Layer when transferred.
            </summary>
            <param name="context">The current Http Context.</param>
            <param name="cookie">The cookie to be set on the Http Response.</param>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Cookies.HttpContextCookieExtensions">
            <summary>
            Provides cookie related extension methods into the <see cref="T:System.Web.HttpContext"/> class.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.HttpContextCookieExtensions.GetCookie(System.Web.HttpContext,System.String)">
            <summary>
            Returns the already existing cookie or null when there is no cookie on the Http Request.
            </summary>
            <param name="context">The current Http Context.</param>
            <param name="name">The name of the cookie we are looking for.</param>
            <returns>Returns the cookie associated with the name. If the cookie does not exist, null is returned.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.HttpContextCookieExtensions.GetOrCreateCookie(System.Web.HttpContext,System.String,System.Boolean)">
            <summary>
            Returns the already existing cookie from the Http Request or creates a new one.
            </summary>
            <remarks>
            <para>
            The expiration date for the new cookie will be set to the maximum possible value.
            </para>
            <para>
            The new cookie will always be configured to be the Http Only cookie due to security reasons.
            </para>
            <para>
            If the cookie already exists it will be unaffected by the provided parameters e.g. by the <paramref name="secure"/> parameter.
            </para>
            </remarks>
            <param name="context">The current Http Context.</param>
            <param name="name">The name of the cookie for which we are looking for and the name of the new cookie if it does not already exists.</param>
            <param name="secure">Determines if a new cookie should be transferred using Secure Socket Layer (SSL). It does not affect already existing cookies.</param>
            <returns>The existing cookie object or a new one.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.HttpContextCookieExtensions.GetOrCreateCookie(System.Web.HttpContext,System.String)">
            <summary>
            Returns the already existing cookie from the Http Request or creates a new one with default parameters.
            </summary>
            <remarks>
            <para>
            When there is no cookie with a given name a new one will be created with default values.
            </para>
            <para>
            A new cookie will not be forced to use the Secure Socket Layer when transferred.
            The expiration date of the new cookie will be set to the maximum possible value.
            The new cookie will always be configured to be the Http Only cookie due to security reasons.
            </para>
            </remarks>
            <param name="context">The current HttpContext.</param>
            <param name="name">The name of the cookie we are looking for.</param>
            <returns>The existing or new cookie.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.HttpContextCookieExtensions.SetCookie(System.Web.HttpContext,System.Web.HttpCookie,System.DateTime,System.Boolean)">
            <summary>
            Sets a cookie on the Http Response and updates it to use the default parameters and according to provided
            <paramref name="expires"/> and <paramref name="secure"/> options.
            </summary>
            <remarks>
            <para>
            The cookie object will always be set to be the Http Only cookie due to security reasons. The rest of cookie object
            settings will be modified according to the provided parameters e.g. <paramref name="expires"/> and <paramref name="secure"/>.
            </para>
            </remarks>
            <param name="context">The current Http Context.</param>
            <param name="cookie">The cookie to be set on the Http Response.</param>
            <param name="expires">The expiration data and time for the cookie.</param>
            <param name="secure">Determines if the cookie should be transferred using Secure Socket Layer (SSL) or not.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.HttpContextCookieExtensions.SetCookie(System.Web.HttpContext,System.Web.HttpCookie,System.Boolean)">
            <summary>
            Sets a cookie on the Http Response and updates it to use the default parameters and according to provided
            <paramref name="secure"/> options.
            </summary>
            <remarks>
            <para>
            The cookie object will always be set to be the Http Only cookie due to security reasons. Its expiration date will
            always be set to the possible maximum value. The rest of cookie object settings will be modified according to the
            provided parameters e.g. <paramref name="secure"/>.
            </para>
            </remarks>
            <param name="context">The current Http Context.</param>
            <param name="cookie">The cookie to be set on the Http Response.</param>
            <param name="secure">Determines if the cookie should be transferred using Secure Socket Layer (SSL) or not.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.HttpContextCookieExtensions.SetCookie(System.Web.HttpContext,System.Web.HttpCookie,System.DateTime)">
            <summary>
            Sets a cookie on the Http Response and updates it to use the default parameters and according to provided
            <paramref name="expires"/> option.
            </summary>
            <remarks>
            <para>
            The cookie object will always be set to be the Http Only cookie due to security reasons. It will always be set not
            to use the Secure Socket Layer. The rest of cookie object settings will be modified according to the
            provided parameters e.g. <paramref name="expires"/>.
            </para>
            </remarks>
            <param name="context">The current Http Context.</param>
            <param name="cookie">The cookie to be set on the Http Response.</param>
            <param name="expires">The expiration data and time for the cookie.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.HttpContextCookieExtensions.SetCookie(System.Web.HttpContext,System.Web.HttpCookie)">
            <summary>
            Sets a cookie on the Http Response and updates it with the default settings.
            The cookie expiration date is set to the maximum one. The cookie will not be 
            forced to use the Secure Socket Layer when transferred.
            </summary>
            <param name="context">The current Http Context.</param>
            <param name="cookie">The cookie to be set on the Http Response.</param>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.CustomValidators.CompareToAttribute">
            <summary>
            Data annotation, validation attribute comparing values of two properties.
            </summary>
            <remarks>
            <para>
            This attribute compares two property values according to the <see cref="P:Volvo.NVS.Utilities.Web.CustomValidators.CompareToAttribute.CompareToOperation"/>.
            The types of compared properties must implement the <see cref="T:System.IComparable"/> interface.
            </para>
            <para>
            The attribute implements the <see cref="T:System.Web.Mvc.IClientValidatable"/> interface thus it will provide the
            client side validation logic when used on MVC model classes.
            </para>
            </remarks>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.CustomValidators.CompareToAttribute.FormatErrorMessage(System.String)">
            <summary>
            Formats the error message displayed when validation problems are detected.
            </summary>
            <param name="name">Name of the original, source property.</param>
            <returns></returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.CustomValidators.CompareToAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Performs the comparison of properties, runs the validation logic.
            </summary>
            <param name="value">The current, source property value.</param>
            <param name="validationContext">The current validation context.</param>
            <returns>Validation result.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.CustomValidators.CompareToAttribute.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
            <summary>
            Gets the validation rules used by the client side validation.
            </summary>
            <param name="metadata">The Model metadata.</param>
            <param name="context">The current controller context.</param>
            <returns>The client validation rules.</returns>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.CustomValidators.CompareToAttribute.CompareToOperation">
            <summary>
            The <see cref="P:Volvo.NVS.Utilities.Web.CustomValidators.CompareToAttribute.CompareToOperation"/> which will be used in the validation process.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.CustomValidators.CompareToAttribute.TargetPropertyName">
            <summary>
            The name of the target property used in the comparison.
            Notice, it's need to provide the full name of the property including any nested parant. Like: "MyEntity.TargetPropertyName".
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.CustomValidators.CompareToAttribute.CustomTargetHtmlId">
            <summary>
            The custom Id of the target html widget. If is null, it will try to resolve over target property name.
            Remark: Don't use #.
            </summary>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.CustomValidators.CompareToOperation">
            <summary>
            The enumerator which defines all operations used in <see cref="T:Volvo.NVS.Utilities.Web.CustomValidators.CompareToAttribute"/>.
            </summary>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.CustomValidators.CompareToOperation.EqualTo">
            <summary>
            Operation for equal comparison.
            </summary>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.CustomValidators.CompareToOperation.NotEqualTo">
            <summary>
            Operation for NOT equal comparison.
            </summary>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.CustomValidators.CompareToOperation.LessThan">
            <summary>
            Operation for less than comparison.
            </summary>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.CustomValidators.CompareToOperation.LessThanOrEqualTo">
            <summary>
            Operation for less than or equal to comparison.
            </summary>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.CustomValidators.CompareToOperation.GreaterThan">
            <summary>
            Operation for greater than comparison.
            </summary>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.CustomValidators.CompareToOperation.GreaterThanOrEqualTo">
            <summary>
            Operation for greater than or equal to comparison.
            </summary>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.CustomValidators.DateTimeRangeAttribute">
            <summary>
            Data annotation, validation attribute checking range of <see cref="T:System.DateTime"/> value.
            </summary>
            <remarks>
            <para>
            This attribute checks if the current property value is within the <see cref="P:Volvo.NVS.Utilities.Web.CustomValidators.DateTimeRangeAttribute.MinValue"/>
            and the <see cref="P:Volvo.NVS.Utilities.Web.CustomValidators.DateTimeRangeAttribute.MaxValue"/> range. The type of the property must be <see cref="T:System.DateTime"/>.
            </para>
            <para>
            The attribute implements the <see cref="T:System.Web.Mvc.IClientValidatable"/> interface thus it will provide the
            client side validation logic when used on MVC model classes.
            </para>
            </remarks>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.CustomValidators.DateTimeRangeAttribute.#ctor(System.String,System.String)">
            <summary>
            Create an instance of the attribute converting string parameters to DateTime.
            </summary>
            <param name="minValue">The minimum value. It should be in UTC date format as string e.g. "2009-01-01T00:00:00".</param>
            <param name="maxValue">The maximum value. It should be in UTC date format as string e.g. "2010-01-01T00:00:00".</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.CustomValidators.DateTimeRangeAttribute.IsValid(System.Object)">
            <summary>
            Validates if the given date is in the range of provided minimum and maximum date values.
            </summary>
            <param name="value">Value of the date to be validated.</param>
            <returns>boolean value</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.CustomValidators.DateTimeRangeAttribute.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
            <summary>
            Gets the validation rules for the client.
            </summary>
            <param name="metadata">The Model Metadata.</param>
            <param name="context">The Controller Context.</param>
            <returns>The client validation rules for this validator.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.CustomValidators.DateTimeRangeAttribute.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
            <summary>
            Sets the data type to DateTime during Metadata Creation.
            </summary>
            <param name="metadata">The Model Metadata.</param>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.CustomValidators.DateTimeRangeAttribute.MinValue">
            <summary>
            Minimum allowed value.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.CustomValidators.DateTimeRangeAttribute.MaxValue">
            <summary>
            Maximum allowed value.
            </summary>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Extensions.AssemblyExtensions">
            <summary>
            The class provides extensions into the reflection mechanism related into the <see cref="T:System.Reflection.Assembly"/> information.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Extensions.AssemblyExtensions.GetWebApplicationAssembly">
            <summary>
            The function determines the main web application assembly which is the one having the Global.asax file
            and defining a http application class (the one inheriting from the <see cref="T:System.Web.HttpApplication"/>).
            </summary>
            <remarks>
            <para>
            The method will look for the class implementing the <see cref="T:System.Web.HttpApplication"/> according to the current <see cref="T:System.Web.HttpContext"/>.
            The <see cref="T:System.Web.HttpContext"/> is required as well as the <see cref="P:System.Web.HttpContext.ApplicationInstance"/> should be available.
            </para>
            <para>
            When there is no <see cref="T:System.Web.HttpContext"/>, it is incomplete or there is no class implementing the <see cref="T:System.Web.HttpApplication"/> detected
            then a new <see cref="T:Volvo.NVS.Core.Exceptions.NVSException"/> will be thrown.
            </para>
            <para>
            The function always returns the assembly in which the class implementing the <see cref="T:System.Web.HttpApplication"/> resides. The first class, directly 
            inheriting from the <see cref="T:System.Web.HttpApplication"/> is used and the assembly from that class is returned.
            </para>
            <para>
            For applications defining the web application classes in separate assemblies the separate assembly can be returned instead of the real, main
            web application one. It is because the function always returns the assembly in which the class derived from the <see cref="T:System.Web.HttpApplication"/>
            is defined.
            </para>
            </remarks>
            <returns>The assembly in which the class derived from the <see cref="T:System.Web.HttpApplication"/> is located for the current <see cref="T:System.Web.HttpContext"/>.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Extensions.AssemblyExtensions.GetWebApplicationAssembly(System.Web.HttpContextBase)">
            <summary>
            The function determines the main web application assembly which is the one having the Global.asax file
            and defining a http application class (the one inheriting from the <see cref="T:System.Web.HttpApplication"/>).
            </summary>
            <remarks>
            <para>
            The method will look for the class implementing the <see cref="T:System.Web.HttpApplication"/> according to the passed <see cref="T:System.Web.HttpContext"/>.
            The <see cref="T:System.Web.HttpContext"/> is required as well as the <see cref="P:System.Web.HttpContext.ApplicationInstance"/> should be available.
            </para>
            <para>
            When there is no <see cref="T:System.Web.HttpContext"/>, it is incomplete or there is no class implementing the <see cref="T:System.Web.HttpApplication"/> detected
            then a new <see cref="T:Volvo.NVS.Core.Exceptions.NVSException"/> will be thrown.
            </para>
            <para>
            The function always returns the assembly in which the class implementing the <see cref="T:System.Web.HttpApplication"/> resides. The first class, directly 
            inheriting from the <see cref="T:System.Web.HttpApplication"/> is used and the assembly from that class is returned.
            </para>
            <para>
            For applications defining the web application classes in separate assemblies the separate assembly can be returned instead of the real, main
            web application one. It is because the function always returns the assembly in which the class derived from the <see cref="T:System.Web.HttpApplication"/>
            is defined.
            </para>
            </remarks>
            <returns>The assembly in which the class derived from the <see cref="T:System.Web.HttpApplication"/> is located for the given <see cref="T:System.Web.HttpContext"/>.</returns>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Bundling.BundleExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.Web.Optimization.Bundle"/> class.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Bundling.BundleExtensions.DisableOrdering(System.Web.Optimization.Bundle)">
            <summary>
            Keeps the original ordering of files on a given <see cref="T:System.Web.Optimization.Bundle"/>. Ensures the original, source ordering remains untouched.
            </summary>
            <param name="bundle">A bundle for which the order should be preserved.</param>
            <returns>The bundle for which the order should be preserved.</returns>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Cookies.HttpCookieExtensions">
            <summary>
            Provides extension and helper methods for the <see cref="T:System.Web.HttpCookie"/> class.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.HttpCookieExtensions.SetRequiredParameters(System.Web.HttpCookie,System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            Set the cookie default, required parameters so the cookie object can follow the ADT.NET, Security and
            other globally known and appointed rules.
            </summary>
            <param name="cookie">The cookie object for which the parameters should be set.</param>
            <param name="expires">The expiration data and time for the cookie.</param>
            <param name="secure">Determines if the cookie should be transferred using Secure Socket Layer (SSL).</param>
            <returns>The updated cookie object.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.HttpCookieExtensions.SetRequiredParameters(System.Web.HttpCookie,System.Boolean)">
            <summary>
            Set the cookie default, required parameters so the cookie object can follow the ADT.NET, Security and
            other globally known and appointed rules.
            </summary>
            <param name="cookie">The cookie object for which the parameters should be set.</param>
            <param name="secure">Determines if the cookie should be transferred using Secure Socket Layer (SSL).</param>
            <returns>The updated cookie object.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.HttpCookieExtensions.SetRequiredParameters(System.Web.HttpCookie,System.DateTime)">
            <summary>
            Set the cookie default, required parameters so the cookie object can follow the ADT.NET, Security and
            other globally known and appointed rules. The method sets the cookie as the one NOT to be transferred using the SSL.
            </summary>
            <param name="cookie">The cookie object for which the parameters should be set.</param>
            <param name="expires">The expiration data and time for the cookie.</param>
            <returns>The updated cookie object.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.HttpCookieExtensions.SetRequiredParameters(System.Web.HttpCookie)">
            <summary>
            Set the cookie default, required parameters so the cookie object can follow the ADT.NET, Security and
            other globally known and appointed rules. The method sets the cookie as the one NOT to be transferred 
            using the SSL and as the one to be using the maximum allowed and possible cookie expiriation date.
            </summary>
            <param name="cookie">The cookie object for which the parameters should be set.</param>
            <returns>The updated cookie object.</returns>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Cookies.CookiesHelper">
            <summary>
            Provides helper methods managing and creating the <see cref="T:System.Web.HttpCookie"/> objects.
            </summary>
            <remarks>
            <para>
            The class is a helper ensuring that most of the recommended or default cookie properties are 
            correctly set on the <see cref="T:System.Web.HttpCookie"/> objects. It also helps in the cookie creation and transfer.
            </para>
            <para>
            Similar methods are also available as extensions into the <see cref="T:System.Web.HttpContext"/> and <see cref="T:System.Web.HttpContextBase"/>.
            Check the <see cref="T:Volvo.NVS.Utilities.Web.Cookies.HttpContextCookieExtensions"/> and <see cref="T:Volvo.NVS.Utilities.Web.Cookies.HttpContextBaseCookieExtensions"/> for details.
            </para>
            <para>
            The <see cref="T:Volvo.NVS.Utilities.Web.Cookies.CookiesHelper"/> implements the <see cref="T:Volvo.NVS.Utilities.Web.Cookies.ICookiesHelper"/> interface. This interface can be resolved
            via the unity <see cref="T:Volvo.NVS.Core.Unity.Container"/> wherever the NVS library needs access into the cookies. It gives a flexibility and
            allows your application code to overwrite the implementation providing a new unity registration for the <see cref="T:Volvo.NVS.Utilities.Web.Cookies.ICookiesHelper"/>.
            </para>
            </remarks>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Cookies.ICookiesHelper">
            <summary>
            Defines a contract for the Cookie helpers. See also the <see cref="T:Volvo.NVS.Utilities.Web.Cookies.CookiesHelper"/> implementation.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.ICookiesHelper.GetCookie(System.Web.HttpContextBase,System.String)">
            <summary>
            Returns the already existing cookie or null when there is no cookie on the Http Request.
            </summary>
            <param name="context">The current Http Context.</param>
            <param name="name">The name of the cookie we are looking for.</param>
            <returns>Returns the cookie associated with the name. If the cookie does not exist, null is returned.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.ICookiesHelper.GetOrCreateCookie(System.Web.HttpContextBase,System.String,System.Boolean)">
            <summary>
            Returns the already existing cookie from the Http Request or creates a new one.
            </summary>
            <remarks>
            <para>
            The expiration date for the new cookie will be set to the maximum possible value.
            </para>
            <para>
            The new cookie will always be configured to be the Http Only cookie due to security reasons.
            </para>
            <para>
            If the cookie already exists it will be unaffected by the provided parameters e.g. by the <paramref name="secure"/> parameter.
            </para>
            </remarks>
            <param name="context">The current Http Context.</param>
            <param name="name">The name of the cookie for which we are looking for and the name of the new cookie if it does not already exists.</param>
            <param name="secure">Determines if a new cookie should be transferred using Secure Socket Layer (SSL). It does not affect already existing cookies.</param>
            <returns>The existing cookie object or a new one.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.ICookiesHelper.GetOrCreateCookie(System.Web.HttpContextBase,System.String)">
            <summary>
            Returns the already existing cookie from the Http Request or creates a new one with default parameters.
            </summary>
            <remarks>
            <para>
            When there is no cookie with a given name a new one will be created with default values.
            </para>
            <para>
            A new cookie will not be forced to use the Secure Socket Layer when transferred.
            The expiration date of the new cookie will be set to the maximum possible value.
            The new cookie will always be configured to be the Http Only cookie due to security reasons.
            </para>
            </remarks>
            <param name="context">The current HttpContext.</param>
            <param name="name">The name of the cookie we are looking for.</param>
            <returns>The existing or new cookie.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.ICookiesHelper.SetCookie(System.Web.HttpContextBase,System.Web.HttpCookie,System.DateTime,System.Boolean)">
            <summary>
            Sets a cookie on the Http Response and updates it to use the default parameters and according to provided
            <paramref name="expires"/> and <paramref name="secure"/> options.
            </summary>
            <remarks>
            <para>
            The cookie object will always be set to be the Http Only cookie due to security reasons. The rest of cookie object
            settings will be modified according to the provided parameters e.g. <paramref name="expires"/> and <paramref name="secure"/>.
            </para>
            </remarks>
            <param name="context">The current Http Context.</param>
            <param name="cookie">The cookie to be set on the Http Response.</param>
            <param name="expires">The expiration data and time for the cookie.</param>
            <param name="secure">Determines if the cookie should be transferred using Secure Socket Layer (SSL) or not.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.ICookiesHelper.SetCookie(System.Web.HttpContextBase,System.Web.HttpCookie,System.Boolean)">
            <summary>
            Sets a cookie on the Http Response and updates it to use the default parameters and according to provided
            <paramref name="secure"/> options.
            </summary>
            <remarks>
            <para>
            The cookie object will always be set to be the Http Only cookie due to security reasons. Its expiration date will
            always be set to the possible maximum value. The rest of cookie object settings will be modified according to the
            provided parameters e.g. <paramref name="secure"/>.
            </para>
            </remarks>
            <param name="context">The current Http Context.</param>
            <param name="cookie">The cookie to be set on the Http Response.</param>
            <param name="secure">Determines if the cookie should be transferred using Secure Socket Layer (SSL) or not.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.ICookiesHelper.SetCookie(System.Web.HttpContextBase,System.Web.HttpCookie,System.DateTime)">
            <summary>
            Sets a cookie on the Http Response and updates it to use the default parameters and according to provided
            <paramref name="expires"/> option.
            </summary>
            <remarks>
            <para>
            The cookie object will always be set to be the Http Only cookie due to security reasons. It will always be set not
            to use the Secure Socket Layer. The rest of cookie object settings will be modified according to the
            provided parameters e.g. <paramref name="expires"/>.
            </para>
            </remarks>
            <param name="context">The current Http Context.</param>
            <param name="cookie">The cookie to be set on the Http Response.</param>
            <param name="expires">The expiration data and time for the cookie.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.ICookiesHelper.SetCookie(System.Web.HttpContextBase,System.Web.HttpCookie)">
            <summary>
            Sets a cookie on the Http Response and updates it limiting access from the java script.
            The cookie expiration date is set to the maximum one. The cookie will not be 
            forced to use the Secure Socket Layer when transferred.
            </summary>
            <param name="context">The current Http Context.</param>
            <param name="cookie">The cookie to be set on the Http Response.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.CookiesHelper.GetCookie(System.Web.HttpContextBase,System.String)">
            <summary>
            Returns the already existing cookie or null when there is no cookie on the Http Request.
            </summary>
            <param name="context">The current Http Context.</param>
            <param name="name">The name of the cookie we are looking for.</param>
            <returns>Returns the cookie associated with the name. If the cookie does not exist, null is returned.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.CookiesHelper.GetOrCreateCookie(System.Web.HttpContextBase,System.String,System.Boolean)">
            <summary>
            Returns the already existing cookie from the Http Request or creates a new one.
            </summary>
            <remarks>
            <para>
            The expiration date for the new cookie will be set to the maximum possible value.
            </para>
            <para>
            The new cookie will always be configured to be the Http Only cookie due to security reasons.
            </para>
            <para>
            If the cookie already exists it will be unaffected by the provided parameters e.g. by the <paramref name="secure"/> parameter.
            </para>
            </remarks>
            <param name="context">The current Http Context.</param>
            <param name="name">The name of the cookie for which we are looking for and the name of the new cookie if it does not already exists.</param>
            <param name="secure">Determines if a new cookie should be transferred using Secure Socket Layer (SSL). It does not affect already existing cookies.</param>
            <returns>The existing cookie object or a new one.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.CookiesHelper.GetOrCreateCookie(System.Web.HttpContextBase,System.String)">
            <summary>
            Returns the already existing cookie from the Http Request or creates a new one with default parameters.
            </summary>
            <remarks>
            <para>
            When there is no cookie with a given name a new one will be created with default values.
            </para>
            <para>
            A new cookie will not be forced to use the Secure Socket Layer when transferred.
            The expiration date of the new cookie will be set to the maximum possible value.
            The new cookie will always be configured to be the Http Only cookie due to security reasons.
            </para>
            </remarks>
            <param name="context">The current HttpContext.</param>
            <param name="name">The name of the cookie we are looking for.</param>
            <returns>The existing or new cookie.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.CookiesHelper.SetCookie(System.Web.HttpContextBase,System.Web.HttpCookie,System.DateTime,System.Boolean)">
            <summary>
            Sets a cookie on the Http Response and updates it to use the default parameters and according to provided
            <paramref name="expires"/> and <paramref name="secure"/> options.
            </summary>
            <remarks>
            <para>
            The cookie object will always be set to be the Http Only cookie due to security reasons. The rest of cookie object
            settings will be modified according to the provided parameters e.g. <paramref name="expires"/> and <paramref name="secure"/>.
            </para>
            </remarks>
            <param name="context">The current Http Context.</param>
            <param name="cookie">The cookie to be set on the Http Response.</param>
            <param name="expires">The expiration data and time for the cookie.</param>
            <param name="secure">Determines if the cookie should be transferred using Secure Socket Layer (SSL) or not.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.CookiesHelper.SetCookie(System.Web.HttpContextBase,System.Web.HttpCookie,System.Boolean)">
            <summary>
            Sets a cookie on the Http Response and updates it to use the default parameters and according to provided
            <paramref name="secure"/> options.
            </summary>
            <remarks>
            <para>
            The cookie object will always be set to be the Http Only cookie due to security reasons. Its expiration date will
            always be set to the possible maximum value. The rest of cookie object settings will be modified according to the
            provided parameters e.g. <paramref name="secure"/>.
            </para>
            </remarks>
            <param name="context">The current Http Context.</param>
            <param name="cookie">The cookie to be set on the Http Response.</param>
            <param name="secure">Determines if the cookie should be transferred using Secure Socket Layer (SSL) or not.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.CookiesHelper.SetCookie(System.Web.HttpContextBase,System.Web.HttpCookie,System.DateTime)">
            <summary>
            Sets a cookie on the Http Response and updates it to use the default parameters and according to provided
            <paramref name="expires"/> option.
            </summary>
            <remarks>
            <para>
            The cookie object will always be set to be the Http Only cookie due to security reasons. It will always be set not
            to use the Secure Socket Layer. The rest of cookie object settings will be modified according to the
            provided parameters e.g. <paramref name="expires"/>.
            </para>
            </remarks>
            <param name="context">The current Http Context.</param>
            <param name="cookie">The cookie to be set on the Http Response.</param>
            <param name="expires">The expiration data and time for the cookie.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Cookies.CookiesHelper.SetCookie(System.Web.HttpContextBase,System.Web.HttpCookie)">
            <summary>
            Sets a cookie on the Http Response and updates it with the default settings.
            The cookie expiration date is set to the maximum one. The cookie will not be 
            forced to use the Secure Socket Layer when transferred.
            </summary>
            <param name="context">The current Http Context.</param>
            <param name="cookie">The cookie to be set on the Http Response.</param>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Extensions.HttpContextExtensions">
            <summary>
            Provides common extension methods into the <see cref="T:System.Web.HttpContext"/> class.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Extensions.HttpContextExtensions.ToHttpContextBase(System.Web.HttpContext)">
            <summary>
            Converts the <see cref="T:System.Web.HttpContext"/> into the <see cref="T:System.Web.HttpContextBase"/>.
            </summary>
            <param name="context">The context to be converted.</param>
            <returns>The converted context.</returns>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Localization.Culture.ApplicationCultureProvider">
            <summary>
            The class gives access into information about available Cultures in the Web application and acts like the culture information cache.
            </summary>
            <remarks>
            <para>
            The class gives access into the list of cultures available in the Web application but itself does not contain any logic determining
            the culture names. Instead of this the class uses culture resolver types, which will provide such information.
            </para>
            <para>
            The culture resolver is any type implementing the <see cref="T:Volvo.NVS.Utilities.Web.Localization.Culture.ICultureResolver"/> interface.
            </para>
            <para>
            The class uses the <see cref="T:Volvo.NVS.Utilities.Web.Localization.Culture.FolderCultureResolver"/> by default to prepare the list of cultures. This default resolver
            scans folders on disc in the web application root directory in order to create the list of culture names. Check the
            <see cref="T:Volvo.NVS.Utilities.Web.Localization.Culture.FolderCultureResolver"/> class for details.
            </para>
            <para>
            Different, custom resolvers can be used in your application. For that you must register the type under Unity and map it
            into the <see cref="T:Volvo.NVS.Utilities.Web.Localization.Culture.ICultureResolver"/> interface. See the <see cref="T:Volvo.NVS.Core.Unity.Container"/> for more details.
            </para>
            <para>
            You may use the ApplicationCultureProvider class every time you need information about the list of application cultures.
            You should provide custom implementations of the <see cref="T:Volvo.NVS.Utilities.Web.Localization.Culture.ICultureResolver"/> interface if you want to change the way
            in which culture names are recognized.
            </para>
            <para>
            The <see cref="T:Volvo.NVS.Utilities.Web.Localization.Culture.ApplicationCultureProvider"/> class is used by the Utilities.Web library itself, internally to get information about cultures.
            </para>
            </remarks>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Localization.Culture.ApplicationCultureProvider.Cultures">
            <summary>
            Returns the list of available application culture names.
            </summary>
            <remarks>
            The method uses the default culture resolved <see cref="T:Volvo.NVS.Utilities.Web.Localization.Culture.FolderCultureResolver"/> or the one resolved via
            the Unity when there is an registered type for <see cref="T:Volvo.NVS.Utilities.Web.Localization.Culture.ICultureResolver"/>.
            </remarks>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Localization.Culture.BaseCultureResolver">
            <summary>
            The abstract localization resolver (finder) on which different implementations returning the list of 
            available application Cultures Names can base.
            </summary>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Localization.Culture.ICultureResolver">
            <summary>
            The interface defines the contract for classes providing list of available application cultures.
            </summary>
            <remarks>
            The culture name providers may use different approaches, implementations depending on the type of the application.
            
            <para>
            Check also the <see cref="T:Volvo.NVS.Utilities.Web.Localization.Culture.ApplicationCultureProvider"/> class.
            </para>
            </remarks>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Localization.Culture.ICultureResolver.GetCultureNames">
            <summary>
            Get the list of culture names available in the application.
            </summary>
            <returns>The list of valid culture names which can be used to initialize the <see cref="T:System.Globalization.CultureInfo"/> objects.</returns>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Localization.Culture.BaseCultureResolver.nameExpression">
            <summary>
            The regular expression pattern used to identify correct culture names.
            
            ^                   Start
            [a-z]               From a to z (lower-case only)
            {2,3}               Repeated from 2 to 3 times
                (?:             Non capturing group
                -               The "-" character
                [a-zA-Z]        From a to z (case insensitive)
                {2,3}           Repeated from 2 to 4 times
                    (?:         Non capturing group
                    -           The "-" character
                    [a-zA-Z]    from a to z (case insensitive)
                    {4}         Repeated from 2 to 4 times
                    )           End of the group
                ?               Optional
                )               End of the group
            ?                   Optional
            $                   End
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Localization.Culture.BaseCultureResolver.IsCultureNameValid(System.String)">
            <summary>
            Determine if the culture name is the valid.
            </summary>
            <param name="name">Culture name to be checked.</param>
            <returns>True if the culture name is valid.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Localization.Culture.BaseCultureResolver.GetCultureNames">
            <summary>
            Get the list of culture names available for the application.
            </summary>
            <returns>The list of culture names.</returns>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Localization.Culture.FolderCultureResolver">
            <summary>
            The folder based localization resolver which will return the list of available application Cultures
            basing on the list of the folders in the main application directory. 
            </summary>
            <remarks>
            <para>
            The finder assumes each translation for the resource file is put in a satellite assembly which itself 
            is in a separate folder. The name of this folder is the same as the name of the Culture. This is according 
            to the standard used in the .NET Framework.
            </para>
            <para>
            For the web application the main folder is the one where bin files are placed (e.g. bin under IIS) and for the non-web 
            application it is the folder where the executing assembly is located itself.
            </para>
            <para>
            The class resolves the list of available cultures only once. Then the list is cached and a value from cache is served each time
            you ask for the list of the application cultures.
            </para>
            </remarks>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Localization.Culture.FolderCultureResolver.WebApplicationAssemblyFolderName">
            <summary>
            Name of the folder where all the binaries are put for the Web Application.
            </summary>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Localization.Culture.FolderCultureResolver.ResourceFileSearchPattern">
            <summary>
            The name pattern used in the directory search when we are looking for resource files.
            </summary>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Localization.Culture.FolderCultureResolver.context">
            <summary>
            The http context used to resolve paths for the web application.
            </summary>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Localization.Culture.FolderCultureResolver.resolvedCultures">
            <summary>
            A cached collection of resolved culture names.
            </summary>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Localization.Culture.FolderCultureResolver.sync">
            <summary>
            A synchronization object and a memory barrier.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Localization.Culture.FolderCultureResolver.#ctor">
            <summary>
            Creates an instance of the Folder Resolver which will use the Http Context if it's available.
            If there is no http context the current assembly location will be used to resolve the cultures.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Localization.Culture.FolderCultureResolver.#ctor(System.Web.HttpContextBase)">
            <summary>
            Creates an instance of the Folder Resolver for a given Http Context.
            </summary>
            <param name="context">The Http Context to be used.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Localization.Culture.FolderCultureResolver.GetBasePath">
            <summary>
            Determines the root application folder which is the Web Application root path or
            the path where the currently executing Assembly is located (for non-web applications).
            </summary>
            <returns>The base, root application path.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Localization.Culture.FolderCultureResolver.GetFolderCandidates">
            <summary>
            Return the list of folders which are candidates for the Culture Name.
            </summary>
            <returns>The collection of folders among which Culture related ones are expected.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Localization.Culture.FolderCultureResolver.IsFolderWithResourceFiles(System.String)">
            <summary>
            Check if the given folder (which is the Culture folder candidate) contains any localization resource files.
            </summary>
            <param name="path">Path into the folder which should be verified.</param>
            <returns>True if folder is recognized as the one having localization related items inside.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Localization.Culture.FolderCultureResolver.GetCultureNames">
            <summary>
            Get the list of culture names according to the localization folders on disc where satellite assemblies are placed.
            </summary>
            <returns>The list of culture names.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Localization.Culture.FolderCultureResolver.RecycleCultures">
            <summary>
            Recycles the collection of already cached culture names.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Localization.Culture.FolderCultureResolver.Context">
            <summary>
            Gives access into the Http Context if it's available
            </summary>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Localization.ILocalizationHelper">
            <summary>
            The interface defines behaviours for the Web Application helpers providing localization related functionality.
            </summary>
            <remarks>
            Take a look at the <see cref="T:Volvo.NVS.Utilities.Web.Localization.LocalizationHelper"/> implementation for details.
            </remarks>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Localization.ILocalizationHelper.GetDefaultCultureName">
            <summary>
            Gets the name of the default application culture.
            </summary>
            <returns>The default application culture name.</returns>
            <remarks>
            Check also the <see cref="T:Volvo.NVS.Utilities.Web.Localization.LocalizationHelper"/> class.
            </remarks>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Localization.ILocalizationHelper.SetNewCulture(System.Web.HttpContextBase,System.String)">
            <summary>
            Sets and stores a new application culture.
            The culture is also stored (in a cookie) so it can be restored on a future call to <see cref="M:Volvo.NVS.Utilities.Web.Localization.ILocalizationHelper.SetCulture(System.Web.HttpContextBase)"/>.
            </summary>        
            <param name="httpContext">The current Http Context.</param>
            <param name="cultureName">Name of the culture to be set.</param>
            <remarks>
            Check also the <see cref="T:Volvo.NVS.Utilities.Web.Localization.LocalizationHelper"/> class.
            </remarks>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Localization.ILocalizationHelper.SetCulture(System.Web.HttpContextBase)">
            <summary>
            Sets the application culture.
            <para>The culture set is the one previously stored by the <see cref="M:Volvo.NVS.Utilities.Web.Localization.ILocalizationHelper.SetNewCulture(System.Web.HttpContextBase,System.String)"/>.</para>
            </summary>
            <remarks>
            Check also the <see cref="T:Volvo.NVS.Utilities.Web.Localization.LocalizationHelper"/> class.
            </remarks>
            <param name="httpContext">The current Http Context.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Localization.ILocalizationHelper.GetCurrentCultureName(System.Web.HttpContextBase)">
            <summary>
            Gets the name of the currently set culture.
            When no culture has been set use default one or the fall back culture name.
            </summary>
            <param name="httpContext">The current Http Context.</param>
            <remarks>
            Check also the <see cref="T:Volvo.NVS.Utilities.Web.Localization.LocalizationHelper"/> class.
            </remarks>
            <returns>The current culture name.</returns>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Localization.ILocalizationHelper.FallbackCultureName">
            <summary>
            The name of the Culture used when no culture is set, determined and no default one is properly configured.
            </summary>
            <remarks>
            Check also the <see cref="T:Volvo.NVS.Utilities.Web.Localization.LocalizationHelper"/> class.
            </remarks>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Localization.HtmlHelperExtensions">
            <summary>
            The class extends the Html helpers with the localization related functions.
            </summary>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Localization.HtmlHelperExtensions.LocalizationJavaScriptStartBlock">
            <summary>
            The java script code starting the list of localized resources with their localized values.
            </summary>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Localization.HtmlHelperExtensions.LocalizationJavaScriptEndBlock">
            <summary>
            The java script code ending the list of localized resources with their values.
            </summary>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Localization.HtmlHelperExtensions.ResourceManagerPropertyName">
            <summary>
            Name of the property for which we look in order to get an instance of the <see cref="T:System.Resources.ResourceManager"/>.
            The method is expected on every Resource 
            </summary>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Localization.HtmlHelperExtensions.resourceManagerIgnoredProperties">
            <summary>
            The collection of property names which should be ignored when we are scanning Resource classes as we 
            are looking for the list of properties returning the localized text values only.
            </summary>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Localization.HtmlHelperExtensions.localizationPropertyType">
            <summary>
            Type of the property which is expected on the Resource class and is used to take localized texts.
            </summary>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Localization.HtmlHelperExtensions.recoureManagerType">
            <summary>
            Type of a static method for which we look in the given Resource Manager type, class and which should 
            return an instance of the <see cref="T:System.Resources.ResourceManager"/> itself.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Localization.HtmlHelperExtensions.GetLocalizationManager(System.Type)">
            <summary>
            Get the instance of the <see cref="T:System.Resources.ResourceManager"/> from the given Resource type.
            </summary>
            <param name="resource">The resource type, the class having the ResourceManager property.</param>
            <returns>An instance of the Resource Manager resolved from the Resource class type <see cref="T:System.Resources.ResourceManager"/></returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Localization.HtmlHelperExtensions.GetLocalizationHelper">
            <summary>
            Resolve an instance of the localization helper.
            </summary>
            <returns>The instance of the localization helper.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Localization.HtmlHelperExtensions.GetLocalizedJavascriptValues(System.Web.Mvc.HtmlHelper,System.Type[])">
            <summary>
            Make the values from the Resource file (resource file generated class) available in the java script (client side).
            The function will transfer all the public localization properties from the <see cref="T:System.Resources.ResourceManager"/> into client.
            No properties with internal or private access modifier are transferred.
            </summary>
            <param name="instance">The Html helper to be extended.</param>
            <param name="resources">Type of the Resources class (classes generated for the resx files).</param>
            <returns>Client side code making the resources available in the client java script</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Localization.HtmlHelperExtensions.SetCultureForKendoUi(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Put the list of script tags including the Kendo localization js files into your page.
            </summary>
            <param name="instance">The Html helper to be extended.</param>
            <param name="kendoCulturePath">Path into the culture specific folder.</param>
            <returns>Html with script section.</returns>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Extensions.ModelStateDictionaryExtension">
            <summary>
            Extension for the <see cref="T:System.Web.Mvc.ModelStateDictionary"/>.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Extensions.ModelStateDictionaryExtension.AddModelErrorWithLogging(System.Web.Mvc.ModelStateDictionary,System.String)">
            <summary>
            Adds an error (not connected to a specific attribute) to model state and 
            also logs the error using logging application block
            </summary>
            <param name="modelState">The model state dictionary.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Extensions.ModelStateDictionaryExtension.CopyOnlyNewErrorsToModelState(System.Web.Mvc.ModelStateDictionary,Microsoft.Practices.EnterpriseLibrary.Validation.ValidationResults)">
            <summary>
            Copies the only new errors to model state.
            </summary>
            <param name="modelStateDictionary">The model state dictionary.</param>
            <param name="validationResults">The validation results.</param>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Extensions.SiteMapBaseExtension">
            <summary>
            Extensions for the Kendo <see cref="T:Kendo.Mvc.SiteMapBase"/> class.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Extensions.SiteMapBaseExtension.ParseQuerystrings(Kendo.Mvc.SiteMapBase)">
            <summary>
            Correctly parses the query strings if existing on each node's Action name.
            For details refer to the following information page:
            https://teamplace.volvo.com/sites/volvoit-dotNET/Web%20client%20wiki/Kendo%20UI%20SiteMap%20limitations%20and%20how%20to%20overcome%20them.aspx
            </summary>
            <param name="siteMapBase">
            The site map object for which the extension method should be available.
            </param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Extensions.SiteMapBaseExtension.ParseQuerystring(System.Collections.Generic.IEnumerable{Kendo.Mvc.SiteMapNode})">
            <summary>
            Correctly parses the query strings if they exist on node's Action name.
            </summary>
            <param name="nodes">Collection of nodes to be parsed.</param>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Extensions.VersionExtension">
            <summary>
            The class provides a way to determine and describe a version of your web application.
            Attributes like build date, version number can be resolved, presented in the UI or in
            any other part of the system where it is required.
            </summary>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Extensions.VersionExtension.assemblyInformationHtml">
            <summary>
            The cached and already resolved information about the assembly, full html.
            </summary>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Extensions.VersionExtension.sync">
            <summary>
            The synchronization object ensuring thread safety for resolution of version related properties.
            </summary>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Extensions.VersionExtension.ApplicationSettingKeyName">
            <summary>
            The name of the key in the application settings which contains the application environment name as the value.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Extensions.VersionExtension.GetVersionDate">
            <summary>
            Returns the build date of the web application.
            Resolves the web application assembly from which the build date should be taken.
            </summary>
            <remarks>
            The version of the web application is determined according to the detected web application assembly.
            The assembly will be resolved as described for <see cref="M:Volvo.NVS.Utilities.Web.Extensions.AssemblyExtensions.GetWebApplicationAssembly"/>.
            </remarks>
            <returns>The formatted application build date.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Extensions.VersionExtension.GetVersionDate(System.Reflection.Assembly)">
            <summary>
            Returns the build date of the application according to the given assembly.
            Uses the given assembly from which the build date should be taken.
            </summary>
            <param name="assembly">The assembly for which the version should be determined and returned as the build version.</param>
            <returns>The formatted application build date.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Extensions.VersionExtension.GetVersionDate(System.String)">
            <summary>
            Returns the build date of the application according to the given assembly, its location.
            </summary>
            <param name="location">Path into the assembly for which the build date should be determined.</param>
            <returns>The formatted application build date.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Extensions.VersionExtension.GetBuildVersion">
            <summary>
            Returns the version of the application.
            Resolves the web application assembly from which the version number should be taken.
            </summary>
            <remarks>
            The build version of the web application is determined according to the detected web application assembly.
            The assembly will be resolved as described for <see cref="M:Volvo.NVS.Utilities.Web.Extensions.AssemblyExtensions.GetWebApplicationAssembly"/>.
            </remarks>
            <returns>The web application build version text.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Extensions.VersionExtension.GetBuildVersion(System.Reflection.Assembly)">
            <summary>
            Returns the build version of the application.
            Uses the given assembly from which the version number should be taken.
            </summary>
            <param name="assembly">The assembly from which the version should be read.</param>
            <returns>The assembly build version text.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Extensions.VersionExtension.GetAssemblyInformation(System.Web.Mvc.HtmlHelper)">
            <summary>
            Returns the information about the application including the application build version and the application version date.
            It provides a unified way to present information about the application version and the running environment.
            </summary>
            <remarks>
            <para>
            The name of the environment is added into the version information string and it is taken from the application configuration
            file and the Environment application setting. See also <see cref="F:Volvo.NVS.Utilities.Web.Extensions.VersionExtension.ApplicationSettingKeyName"/>.
            </para>
            <para>
            The version, information about the web application is determined according to the detected web application assembly.
            The assembly will be resolved as described for <see cref="M:Volvo.NVS.Utilities.Web.Extensions.AssemblyExtensions.GetWebApplicationAssembly"/>.
            </para>
            <para>
            The application Assembly Information string is only determined once and then stored in cache. Any subsequent calls
            resolving the assembly information string will only return the already cached value.
            </para>
            </remarks>
            <param name="instance">The instance of the html helper object which we extend.</param>
            <returns>Assembly Information.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Extensions.VersionExtension.GetAssemblyInformation(System.Web.Mvc.HtmlHelper,System.Reflection.Assembly)">
            <summary>
            Returns the information about the application including the application build version and the application version date.
            It provides a unified way to present information about the application version and the running environment.
            </summary>
            <remarks>
            <para>
            The name of the environment is added into the version information string and it is taken from the application configuration
            file and the Environment application setting. See also <see cref="F:Volvo.NVS.Utilities.Web.Extensions.VersionExtension.ApplicationSettingKeyName"/>.
            </para>
            <para>
            The version, information about the web application is determined according to the detected web application assembly.
            The assembly will be resolved as described for <see cref="M:Volvo.NVS.Utilities.Web.Extensions.AssemblyExtensions.GetWebApplicationAssembly"/>.
            </para>
            <para>
            The application Assembly Information string is only determined once and then stored in cache. Any subsequent calls
            resolving the assembly information string will only return the already cached value.
            </para>
            </remarks>
            <param name="instance">The instance of the html helper object which we extend.</param>
            <param name="assembly">The assembly from which the version information should be taken.</param>
            <returns>Assembly Information.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Extensions.VersionExtension.GetAssemblyInformation(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Returns the information about the application including the application build version and the application version date.
            It provides a unified way to present information about the application version and the running environment.
            </summary>
            <remarks>
            <para>
            The name of the environment is added into the version information string according to the passed <paramref name="environmentName"/>.
            </para>
            <para>
            The version, information about the web application is determined according to the detected web application assembly.
            The assembly will be resolved as described for <see cref="M:Volvo.NVS.Utilities.Web.Extensions.AssemblyExtensions.GetWebApplicationAssembly"/>.
            </para>
            <para>
            The application Assembly Information string is only determined once and then stored in cache. Any subsequent calls
            resolving the assembly information string will only return the already cached value.
            </para>
            </remarks>
            <param name="instance">The instance of the html helper object which we extend.</param>
            <param name="environmentName">Name of the environment to be added into the information string.</param>
            <returns>Assembly Information.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Extensions.VersionExtension.GetAssemblyInformation(System.Web.Mvc.HtmlHelper,System.Reflection.Assembly,System.String)">
            <summary>
            Returns the information about the application including the application build version and the application version date.
            It provides a unified way to present information about the application version and the running environment.
            </summary>
            <remarks>
            <para>
            The name of the environment is added into the version information string according to the passed <paramref name="environmentName"/>.
            </para>
            <para>
            The version, information about the web application is determined according to the detected web application assembly.
            The assembly will be resolved as described for <see cref="M:Volvo.NVS.Utilities.Web.Extensions.AssemblyExtensions.GetWebApplicationAssembly"/>.
            </para>
            <para>
            The application Assembly Information string is only determined once and then stored in cache. Any subsequent calls
            resolving the assembly information string will only return the already cached value.
            </para>
            </remarks>
            <param name="instance">The instance of the html helper object which we extend.</param>
            <param name="assembly">The assembly from which the version information should be taken.</param>
            <param name="environmentName">Name of the environment to be added into the information string.</param>
            <returns>Assembly Information.</returns>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Filters.AutoMapperConfigurationActionFilterAttribute">
            <summary>
            MVC filter attribute configuring the AutoMapper. It is recommended to use <see cref="T:Volvo.NVS.Utilities.Automapper.AutoMapperConfiguration"/> instead.
            </summary>
            <remarks>
            The attribute can be used on the MVC Action or the MVC Controller itself.
            </remarks>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Filters.AutoMapperConfigurationActionFilterAttribute.#ctor(System.Type)">
            <summary>
            Assigns AutoMapper Profile to the AutoMapper Configuration so the mapping between the types is known
            for the AutoMapper library as described and implemented by the Profile class itself.
            </summary>
            <param name="profileType">The AutoMapper Profile Type to be configured.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Filters.AutoMapperConfigurationActionFilterAttribute.#ctor(System.Type,System.Type)">
            <summary>
            Assigns AutoMapper Profiles to the AutoMapper Configuration so the mapping between the types is known
            for the AutoMapper library as described and implemented by the Profile classes itself.
            </summary>
            <param name="profileType">The AutoMapper Profile Type to be configured.</param>
            <param name="profileType2">The additional AutoMapper Profile Type to be configured.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Filters.AutoMapperConfigurationActionFilterAttribute.#ctor(System.Type,System.Type,System.Type)">
            <summary>
            Assigns AutoMapper Profiles to the AutoMapper Configuration so the mapping between the types is known
            for the AutoMapper library as described and implemented by the Profile classes itself.
            </summary>
            <param name="profileType">The AutoMapper Profile Type to be configured.</param>
            <param name="profileType2">The additional AutoMapper Profile Type to be configured.</param>
            <param name="profileType3">The additional AutoMapper Profile Type to be configured.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Filters.AutoMapperConfigurationActionFilterAttribute.#ctor(System.Type,System.Type,System.Type,System.Type)">
            <summary>
            Assigns AutoMapper Profiles to the AutoMapper Configuration so the mapping between the types is known
            for the AutoMapper library as described and implemented by the Profile classes itself.
            </summary>
            <param name="profileType">The AutoMapper Profile Type to be configured.</param>
            <param name="profileType2">The additional AutoMapper Profile Type to be configured.</param>
            <param name="profileType3">The additional AutoMapper Profile Type to be configured.</param>
            <param name="profileType4">The additional AutoMapper Profile Type to be configured.</param>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Filters.FormActionAttribute">
            <summary>
            MVC Filter Attribute checking if the http call to the controller is from an action of a form.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Filters.FormActionAttribute.IsValidName(System.Web.Mvc.ControllerContext,System.String,System.Reflection.MethodInfo)">
            <summary>
            Determines whether the action name is valid in the specified controller context.
            </summary>
            <param name="controllerContext">The controller context.</param>
            <param name="actionName">The name of the action.</param>
            <param name="methodInfo">Information about the action method.</param>
            <returns>
            true if the action name is valid in the specified controller context; otherwise, false.
            </returns>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger">
            <summary>
            Manages various user, application messages (e.g. those created in Mvc Controllers) and allows to display those messages in UI (e.g. in Mvc Views).
            </summary>
            <remarks>
            <para>
            The <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/> can be used to collect various messages which should be displayed for the end users in the UI.
            </para>
            <para>
            <h3>Accessing Messenger</h3>
            </para>
            <para>
            In standard cases and when used from MVC <see cref="T:System.Web.Mvc.Controller"/> derived classes you may simply use the <see cref="M:Volvo.NVS.Utilities.Web.Messaging.ControllerBaseExtensions.GetMessenger(System.Web.Mvc.ControllerBase)"/>
            extension method in order to get access into the flash messenger object. For example the following can be present in your controller code:
            </para>
            <code>
            ...
            using Volvo.NVS.Utilities.Web.Messaging;
            ...
            public ActionResult Index()
            {
               this.GetMessenger().AppendMessage("sample message");
               return View();
            }
            </code>
            <para>
            It is also possible to derive the Mvc controller class from the <see cref="T:Volvo.NVS.Utilities.Web.Controllers.NVSController"/> and then use the <see cref="P:Volvo.NVS.Utilities.Web.Controllers.NVSController.Messenger"/> property
            exposed by this class directly. For example the following code can be created:
            </para>
            <code>
            public class SampleController : NVSController
            {
            
               public ActionResult Index()
               {
                  Messenger.AppendMessage("sample message");
                  return View();
               }
            
            }
            </code>
            <para>
            <h3>Adding Messages</h3>
            </para>
            <para>
            Messages can be added by usage of the <see cref="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger.AppendMessage(System.String)"/> or the <see cref="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger.AppendMessage(System.String,Volvo.NVS.Utilities.Web.Messaging.MessageType)"/> 
            methods.
            </para>
            <para>
            <h3>Getting Messages</h3>
            </para>
            <para>
            The messenger provides to group of functions: Get functions and Read functions. Get functions return the messages and remove them from the collection while 
            Read functions return the messages without removing them from the collection. When messages are not removed from the collection they may still be passed into
            the subsequent requests.
            </para>
            <para>
            One may examine and consume all the currently collected messages via one of the get functions. The <see cref="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger.GetErrorMessages"/>, <see cref="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger.GetWarningMessages"/> 
            and <see cref="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger.GetInfoMessages"/> return messages of a specific type only and remove them from the collection. Calling one of the get function always
            <b>REMOVES</b> received messages from the messenger.
            </para>
            <para>
            One may also read the messages using <see cref="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger.ReadErrorMessages"/>, <see cref="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger.ReadWarningMessages"/> and <see cref="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger.ReadInfoMessages"/>. Reading messages
            does not remove them from the messenger.
            </para>
            <para>
            <h3>Removing Messages</h3>
            </para>
            <para>
            All the collected messages can be removed at any time using the <see cref="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger.Clear"/> method. Please note, that messages are also removed when one
            of the Get functions is used. In that case only the read and received messages are removed from the collection.
            </para>
            <para>
            <h3>Displaying Messages</h3>
            </para>
            <para>
            In standard cases messages are displayed in Views using the <see cref="M:Volvo.NVS.Utilities.Web.Messaging.HtmlHelperExtensions.Summary(System.Web.Mvc.HtmlHelper)"/> extension method.
            For example the following can be added into your View (Razor syntax):
            </para>
            <code language="html">
            @using Volvo.NVS.Utilities.Web.Messaging
            <h1>Messages:</h1>
            @Html.Summary()
            </code>
            <para>
            <h3>Passing Messages to Redirected Views</h3>
            </para>
            <para>
            By default all messages created under the current request will be passed into all the subsequent requests. For example we have the following 
            About() action which redirects into the Index(). The about action adds a single message before redirection occurs:
            </para>
            <code>
            public ActionResult About()
            {
               Messenger.AppendMessage("about message");
               return RedirectToAction("Index");
            }
            </code>
            <para>
            In the Index() action we process the request and we also add some new messages:
            </para>
            <code>
            public ActionResult Index()
            {
               Messenger.AppendMessage("index message");
               return View();
            }
            </code>
            <para>
            Because by default <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/> messages are passed into subsequent requests when redirection occurs the view for Index()
            will display two messages:
            <ul>
            <li>about message</li>
            <li>index message</li>
            </ul>
            </para>
            <para>
            The above cross-request functionality is available because the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerMvcDataProvider"/> is used by default in order to persist
            messages for the flash messenger. The <see cref="T:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerMvcDataProvider"/> uses MVC TempData for this, which by default uses session store.
            For details please check the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerMvcDataProvider"/> class and <b>Advanced Scenarios</b> of this paper.
            </para>
            <para>
            <h3>Advanced Scenarios</h3>
            </para>
            <para>
            One may also need to create the messenger object out of the controller. In order to create an instance of the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/>
            an implementation of the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.Providers.IFlashMessengerDataProvider"/> interface must be provided. The implementation of the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.Providers.IFlashMessengerDataProvider"/>
            tells the messenger how to pass messages from a controller into a view.
            </para>
            <para>
            The <see cref="T:Volvo.NVS.Utilities.Web.Messaging.Providers.FlashMessengerMvcDataProvider"/> is a default implementation of the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.Providers.IFlashMessengerDataProvider"/> used by the messenger.
            This default implementation uses ViewData and TempData to pass information into MVC Views. Wherever you decide to use custom implementation you
            must ensure all the places where the messenger is created use the same <see cref="T:Volvo.NVS.Utilities.Web.Messaging.Providers.IFlashMessengerDataProvider"/> implementation.
            </para>
            <para>
            Most of the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/> messenger related extension methods are also capable of resolving an instance of the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.Providers.IFlashMessengerDataProvider"/>
            as well as the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.IFlashMessenger"/> from the current unity <see cref="T:Volvo.NVS.Core.Unity.Container"/>. It means custom implementations can be registered within
            the unity and they will be automatically used in all the places where the messenger is object is requested.
            </para>
            </remarks>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Messaging.IFlashMessenger">
            <summary>
            Defines a contract for a flash messenger. One may create, access and examine different application messages using the flash messenger.
            The created messages can later be displayed in the UI, Views.
            </summary>
            <remarks>
            Check also the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/> class.
            </remarks>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.IFlashMessenger.AppendMessage(System.String,Volvo.NVS.Utilities.Web.Messaging.MessageType)">
            <summary>
            Appends a new message of a given type so it can be displayed by a view under the current or subsequent request.
            </summary>
            <param name="message">A message text.</param>
            <param name="type">A type of the message.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.IFlashMessenger.AppendMessage(System.String)">
            <summary>
            Appends a new message of information type so it can be displayed by a view under the current or subsequent request.
            </summary>
            <param name="message">A message text.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.IFlashMessenger.GetErrorMessages">
            <summary>
            Returns all collected error messages. It <b>removes</b> returned messages from the collection.
            </summary>
            <returns>The collection of messages.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.IFlashMessenger.GetWarningMessages">
            <summary>
            Returns all collected warning messages. It <b>removes</b> returned messages from the collection.
            </summary>
            <returns>The collection of messages.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.IFlashMessenger.GetInfoMessages">
            <summary>
            Returns all collected information messages. It <b>removes</b> returned messages from the collection.
            </summary>
            <returns>The collection of messages.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.IFlashMessenger.ReadErrorMessages">
            <summary>
            Returns all collected error messages. It <b>keeps</b> returned messages in the collection.
            </summary>
            <returns>The collection of messages.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.IFlashMessenger.ReadWarningMessages">
            <summary>
            Returns all collected warning messages. It <b>keeps</b> returned messages in the collection.
            </summary>
            <returns>The collection of messages.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.IFlashMessenger.ReadInfoMessages">
            <summary>
            Returns all collected information messages. It <b>keeps</b> returned messages in the collection.
            </summary>
            <returns>The collection of messages.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.IFlashMessenger.ReadMessages">
            <summary>
            Returns a collection (copy) of all currently collected flash messages. These are messages added under the current 
            request and those passed from the previous request and available for the currently processing one.
            </summary>
            <remarks>
            <para>
            The <see cref="M:Volvo.NVS.Utilities.Web.Messaging.IFlashMessenger.ReadMessages"/> returns a brand new collection, copy of all the messages collected so far by the
            <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/> and available on the flash messenger store. It means that any modifications to
            to this collection will not have effect on the original, source list of messages.
            </para>
            </remarks>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.IFlashMessenger.Clear">
            <summary>
            Removes all the messages collected so far.
            </summary>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger.provider">
            <summary>
            The current provider, store of the flash messenger messages.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger.#ctor(Volvo.NVS.Utilities.Web.Messaging.Providers.IFlashMessengerDataProvider)">
            <summary>
            Creates an instance of the flash messenger managing the collection of messages via the given provider.
            </summary>
            <param name="provider">
            The message provider telling where messages should be stored and how those messages should be passed between a controller and a view.
            </param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger.AppendMessage(System.String,Volvo.NVS.Utilities.Web.Messaging.MessageType)">
            <summary>
            Appends a new message of a given type so it can be displayed by a view under the current or subsequent request.
            </summary>
            <param name="message">A message text.</param>
            <param name="type">A type of the message.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger.AppendMessage(System.String)">
            <summary>
            Appends a new message of information type so it can be displayed by a view under the current or subsequent request.
            </summary>
            <param name="message">A message text.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger.GetErrorMessages">
            <summary>
            Returns all collected error messages. It <b>removes</b> returned messages from the collection.
            </summary>
            <returns>The collection of messages.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger.GetWarningMessages">
            <summary>
            Returns all collected warning messages. It <b>removes</b> returned messages from the collection.
            </summary>
            <returns>The collection of messages.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger.GetInfoMessages">
            <summary>
            Returns all collected information messages. It <b>removes</b> returned messages from the collection.
            </summary>
            <returns>The collection of messages.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger.ReadErrorMessages">
            <summary>
            Returns all collected error messages. It <b>keeps</b> returned messages in the collection.
            </summary>
            <returns>The collection of messages.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger.ReadWarningMessages">
            <summary>
            Returns all collected warning messages. It <b>keeps</b> returned messages in the collection.
            </summary>
            <returns>The collection of messages.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger.ReadInfoMessages">
            <summary>
            Returns all collected information messages. It <b>keeps</b> returned messages in the collection.
            </summary>
            <returns>The collection of messages.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger.ReadMessages">
            <summary>
            Returns a collection (copy) of all currently collected flash messages. These are messages added under the current 
            request and those passed from the previous request and available for the currently processing one (if cross request
            messaging is enabled).
            </summary>
            <remarks>
            <para>
            The <see cref="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger.ReadMessages"/> returns a brand new collection, copy of all the messages collected so far by the
            <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/> and available on the flash messenger store. It means that any modifications to
            to this collection will not have effect on the original, source list of messages.
            </para>
            </remarks>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger.Clear">
            <summary>
            Removes all the messages collected so far.
            </summary>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessengerMessages">
            <summary>
            Represents a collection of <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/> messages. Check <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/> for details.
            </summary>
            <remarks>
            Normally you do not use this collection directly. You use the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/> instance instead.
            </remarks>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Messaging.IFlashMessengerMessages">
            <summary>
            Defines a contract for the collection of <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/> messages.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.IFlashMessengerMessages.Add(Volvo.NVS.Utilities.Web.Messaging.MessageType,System.String)">
            <summary>
            Adds a message of the given type into the collection of messages.
            </summary>
            <param name="type">Type of the message to be added.</param>
            <param name="message">The message text to be added.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.IFlashMessengerMessages.Add(Volvo.NVS.Utilities.Web.Messaging.IFlashMessengerMessages)">
            <summary>
            Adds the collection of messages from another <see cref="T:Volvo.NVS.Utilities.Web.Messaging.IFlashMessengerMessages"/> instance.
            </summary>
            <param name="source">The source from which messages should be copied. No source is affected.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.IFlashMessengerMessages.Clear(Volvo.NVS.Utilities.Web.Messaging.MessageType)">
            <summary>
            Removes all the messages of the given message type.
            </summary>
            <param name="type">A type specifying messages to be removed.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.IFlashMessengerMessages.Clear">
            <summary>
            Removes all the messages.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.IFlashMessengerMessages.Get(Volvo.NVS.Utilities.Web.Messaging.MessageType)">
            <summary>
            Returns all the messages of the given type.
            </summary>
            <param name="type">Type of the messages to be returned.</param>
            <returns>The collection of messages of the requested type.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.IFlashMessengerMessages.GetAndClear(Volvo.NVS.Utilities.Web.Messaging.MessageType)">
            <summary>
            Returns all the messages of the given type and removes them from the collection.
            </summary>
            <param name="type">Type of the messages to be returned and the removed.</param>
            <returns>The collection of messages of the requested type.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.IFlashMessengerMessages.Get">
            <summary>
            Returns all the messages of all types.
            </summary>
            <returns>The dictionary of all the messages.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.IFlashMessengerMessages.GetAndClear">
            <summary>
            Returns all the messages (of all types) and removes them from the collection.
            </summary>
            <returns>The dictionary of all the messages.</returns>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Messaging.FlashMessengerMessages.messages">
            <summary>
            The collection of messenger messages grouped by message type.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessengerMessages.#ctor">
            <summary>
            Creates an instance of the flash messenger message collection.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessengerMessages.#ctor(Volvo.NVS.Utilities.Web.Messaging.IFlashMessengerMessages)">
            <summary>
            Creates an instance of the flash messenger message collection initializing it with a given messages.
            </summary>
            <param name="source">The messages to be added, copied into the collection.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessengerMessages.GetMessageTypes">
            <summary>
            Returns all the available message types.
            </summary>
            <returns>The collection of all the message types.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessengerMessages.Add(Volvo.NVS.Utilities.Web.Messaging.MessageType,System.String)">
            <summary>
            Adds a message of the given type into the collection of messages.
            </summary>
            <param name="type">Type of the message to be added.</param>
            <param name="message">The message text to be added.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessengerMessages.Add(Volvo.NVS.Utilities.Web.Messaging.IFlashMessengerMessages)">
            <summary>
            Adds the collection of messages from another <see cref="T:Volvo.NVS.Utilities.Web.Messaging.IFlashMessengerMessages"/> instance.
            </summary>
            <param name="source">The source from which messages should be copied. No source is affected.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessengerMessages.Clear(Volvo.NVS.Utilities.Web.Messaging.MessageType)">
            <summary>
            Removes all the messages of the given message type.
            </summary>
            <param name="type">A type specifying messages to be removed.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessengerMessages.Clear">
            <summary>
            Removes all the messages.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessengerMessages.Get(Volvo.NVS.Utilities.Web.Messaging.MessageType)">
            <summary>
            Returns all the messages of the given type.
            </summary>
            <param name="type">Type of the messages to be returned.</param>
            <returns>The collection of messages of the requested type.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessengerMessages.GetAndClear(Volvo.NVS.Utilities.Web.Messaging.MessageType)">
            <summary>
            Returns all the messages of the given type and removes them from the collection.
            </summary>
            <param name="type">Type of the messages to be returned and the removed.</param>
            <returns>The collection of messages of the requested type.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessengerMessages.Get">
            <summary>
            Returns all the messages (of all types).
            </summary>
            <returns>The dictionary of all the messages.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Messaging.FlashMessengerMessages.GetAndClear">
            <summary>
            Returns all the messages (of all types) and removes them from the collection.
            </summary>
            <returns>The dictionary of all the messages.</returns>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Session.ISessionHelper">
            <summary>
            Defines a contract for session helpers. See also the <see cref="T:Volvo.NVS.Utilities.Web.Session.SessionHelper"/> class.
            </summary>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Localization.LocalizationHelper">
            <summary>
            The class provides helper functions used during the localization of the Web Application.
            It manages culture information within the cookies.
            </summary>
            <remarks>
            The class manages the culture information for the Web application within the cookies. It is 
            possible to set the current application culture name, overwrite it or get it.
            <para>
            One can use the <see cref="M:Volvo.NVS.Utilities.Web.Localization.LocalizationHelper.SetNewCulture(System.Web.HttpContextBase,System.String)"/> method in order to configure the culture for the current user.
            </para>
            <para>
            The <see cref="M:Volvo.NVS.Utilities.Web.Localization.LocalizationHelper.SetCulture(System.Web.HttpContextBase)"/> method can be used to set the culture information for the currently executing
            request and according to what has been configured by a call to <see cref="M:Volvo.NVS.Utilities.Web.Localization.LocalizationHelper.SetNewCulture(System.Web.HttpContextBase,System.String)"/> and is currently
            available on the cookie.
            </para>
            </remarks>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Localization.LocalizationHelper.CultureCookieName">
            <summary>
            Name of the cookie holding the selected culture.
            </summary>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Localization.LocalizationHelper.cookiesHelper">
            <summary>
            The cookie helper instance
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Localization.LocalizationHelper.#ctor">
            <summary>
            Default constructor. This uses Unity to resolve automatically the implementation for the <see cref="T:Volvo.NVS.Utilities.Web.Cookies.ICookiesHelper"/> interface.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Localization.LocalizationHelper.#ctor(Volvo.NVS.Utilities.Web.Cookies.ICookiesHelper)">
            <summary>
            Constructor for testing purposes.
            </summary>
            <param name="cookiesHelper">An implementation of <see cref="T:Volvo.NVS.Utilities.Web.Cookies.ICookiesHelper"/> interface </param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Localization.LocalizationHelper.GetDefaultCultureName">
            <summary>
            Gets the name of the default application culture.
            </summary>
            <returns>The default application culture name.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Localization.LocalizationHelper.SetNewCulture(System.Web.HttpContextBase,System.String)">
            <summary>
            Sets and stores a new application culture.
            The culture is set on the current <see cref="T:System.Threading.Thread"/> and on both the UICulture and the Culture.
            The culture is also stored (in a cookie) so it can be restored on a future call to <see cref="M:Volvo.NVS.Utilities.Web.Localization.LocalizationHelper.SetCulture(System.Web.HttpContextBase)"/>.
            </summary>        
            <param name="httpContext">The current Http Context.</param>
            <param name="cultureName">Name of the culture to be set.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Localization.LocalizationHelper.SetCulture(System.Web.HttpContextBase)">
            <summary>
            Sets the application culture on the current <see cref="T:System.Threading.Thread"/> and on both the UICulture and the Culture.
            <para>The culture set is the one previously stored by the <see cref="M:Volvo.NVS.Utilities.Web.Localization.LocalizationHelper.SetNewCulture(System.Web.HttpContextBase,System.String)"/>.</para>
            <para>When no culture has been stored we try to detect one from the <see cref="T:System.Web.HttpRequest"/> User Language.</para>
            <para>When no culture has been stored and detected then the default or fall back culture is used.</para>
            </summary>
            <remarks>
            <para>
            The method will set the culture on the thread using the culture name, which has been previously recognized and specified by a call to 
            the <see cref="M:Volvo.NVS.Utilities.Web.Localization.LocalizationHelper.SetNewCulture(System.Web.HttpContextBase,System.String)"/>.
            </para>
            <para>
            The method will only set the culture which is within the recognized application culture names. The recognized culture names are provided
            by usage of the <see cref="T:Volvo.NVS.Utilities.Web.Localization.Culture.ApplicationCultureProvider"/> class. Check the <see cref="T:Volvo.NVS.Utilities.Web.Localization.Culture.ApplicationCultureProvider"/> to see how
            custom Web application culture names can be provided.
            </para>
            </remarks>
            <param name="httpContext">The current Http Context.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Localization.LocalizationHelper.GetCurrentCultureName(System.Web.HttpContextBase)">
            <summary>
            Gets the name of the currently set culture.
            When no culture has been set use default one or the fall-back culture name.
            </summary>
            <param name="httpContext">The current Http Context.</param>
            <returns>The current culture name.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Localization.LocalizationHelper.SetCultureOnThread(System.String)">
            <summary>
            The method sets the culture on the application Thread.
            The culture is set on the current <see cref="T:System.Threading.Thread"/> and on both the UICulture and the Culture.
            You may overwrite the method if you plan to set the culture on different thread properties.
            </summary>
            <param name="cultureName">The name of the detected culture to be set.</param>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Localization.LocalizationHelper.FallbackCultureName">
            <summary>
            The name of the Culture used when no culture is set, determined and no default one is properly configured.
            </summary>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Session.SessionHelper">
            <summary>
            Abstracts access and provides helper methods for the web application session.
            </summary>
            <remarks>
            <para>
            The web application session is not necessarily the ASP.NET session only. Depending on the type
            of the application the session can use custom code and custom components storing information
            in the database, on static fields and more.
            </para>
            <para>
            One may derive from the <see cref="T:Volvo.NVS.Utilities.Web.Session.SessionHelper"/> in order to get access into the web 
            session related helper functions. For example: the <see cref="P:Volvo.NVS.Utilities.Web.Session.SessionHelper.SessionSettingsProvider"/> 
            property gives access into the web session (ASP.NET Session) dictionary where one can 
            store or get any custom values.
            </para>
            <para>
            The <see cref="T:Volvo.NVS.Utilities.Web.Session.SessionHelper"/> resolves all of its dependencies in a lazy way meaning that
            the objects needed by the helper are created if and only if they are requested for the first
            time. For example: the <see cref="P:Volvo.NVS.Utilities.Web.Session.SessionHelper.SessionSettingsProvider"/> creates an implementation of the
            <see cref="T:Volvo.NVS.Utilities.Web.Session.ISessionSettingsProvider"/> when used for the first time.
            </para>
            <para>
            The <see cref="T:Volvo.NVS.Utilities.Web.Session.SessionHelper"/> can be registered in the unity and its instance can be resolved
            by usage of the unity container. All its dependencies can also be registered within the unity 
            when a custom implementation is required. For example: the <see cref="T:Volvo.NVS.Utilities.Web.Session.ISessionSettingsProvider"/> 
            can be registered within the unity and can be mapped into any, custom implementation when needed.
            </para>
            </remarks>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Session.SessionHelper.sessionSettingsProvider">
            <summary>
            The already resolved session settings provider.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Session.SessionHelper.#ctor(Volvo.NVS.Utilities.Web.Session.ISessionSettingsProvider)">
            <summary>
            Creates an instance of the session helper using a given session settings provider.
            </summary>
            <param name="sessionProvider">The session setting provider to be used.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Session.SessionHelper.#ctor">
            <summary>
            Creates an instance of the session helper.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Session.SessionHelper.SessionSettingsProvider">
            <summary>
            Gives access into the session settings provider.
            </summary>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Session.SessionLifetimeManager">
            <summary>
            The Unity lifetime manager where a single instance is managed within a single web session.
            </summary>
            <remarks>
            <para>
            The Unity <see cref="T:Microsoft.Practices.Unity.LifetimeManager"/> classes control how and when instances are created by the Unity container.
            The <see cref="T:Volvo.NVS.Utilities.Web.Session.SessionLifetimeManager"/> manages objects within the web session so their lifetime is bound into
            the current <see cref="T:System.Web.HttpContext"/>.
            </para>
            </remarks>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Session.SessionLifetimeManager.sessionKey">
            <summary>
            The session key under which the object will be stored.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Session.SessionLifetimeManager.GetValue">
            <summary>
            Retrieve a value from the backing store associated with this Lifetime policy.
            </summary>
            <returns>the object desired, or null if no such object is currently stored.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Session.SessionLifetimeManager.SetValue(System.Object)">
            <summary>
            Stores the given value into backing store for retrieval later.
            </summary>
            <param name="newValue">The object being stored.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Session.SessionLifetimeManager.RemoveValue">
            <summary>
            Remove the given object from backing store.
            </summary>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Localization.LocalizationResourcesCache">
            <summary>
            The class acts like the cache for the Localization code passed into the client side browser.
            We pass resource values available under Resource classes on the server side. When they are passed
            the values are available in the client side java script. For that the java script code must be
            created by the html helpers. Such creation is time consuming so the values which are already created
            are stored in the cache.
            
            For details refer to the <see cref="M:Volvo.NVS.Utilities.Web.Localization.HtmlHelperExtensions.GetLocalizedJavascriptValues(System.Web.Mvc.HtmlHelper,System.Type[])"/>.
            
            </summary>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Localization.LocalizationResourcesCache.cache">
            <summary>
            The cache holding the localization code which should be passed into the client side.
            The cache is for a <see cref="T:System.Type"/> which is the Resource generated class (resx).
            Each cache item is holds then values for the particular language (culture name).
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Localization.LocalizationResourcesCache.GetOrAdd(System.Type,System.String,System.Func{System.String,System.Web.Mvc.MvcHtmlString})">
            <summary>
            Get the localization client side code from cache or resolve the code using the given function and store it in cache for later use.
            </summary>
            <param name="resourceType">Type of the resource class (resx generated class) for which the localization code should be resolved.</param>
            <param name="cultureName">Name of the culture for which we are resolving the value.</param>
            <param name="valueFactory">A function creating the localization code when it is not found in cache.</param>
            <returns>MVCHtmlString.</returns>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Messaging.MessageType">
            <summary>
            Defines a type of the <see cref="T:Volvo.NVS.Utilities.Web.Messaging.FlashMessenger"/> message.
            </summary>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Messaging.MessageType.Info">
            <summary>
            Information message.
            </summary>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Messaging.MessageType.Warning">
            <summary>
            Warning message.
            </summary>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Messaging.MessageType.Error">
            <summary>
            Error message.
            </summary>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Resources.HtmlResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Resources.HtmlResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Resources.HtmlResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Resources.HtmlResources.UnableGetLocalizationManager">
            <summary>
              Looks up a localized string similar to Unable to get localization manager object from {0}.{1}.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Resources.HtmlResources.UnableGetProperty">
            <summary>
              Looks up a localized string similar to Unable to get {0} property from the {1} type.
            </summary>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Resources.SettingsProvidersResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Resources.SettingsProvidersResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Resources.SettingsProvidersResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Resources.SettingsProvidersResources.KeyCannotBeNullEmpty">
            <summary>
              Looks up a localized string similar to The &apos;key&apos; parameter cannot be null/empty.
            </summary>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Resources.HelpersResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Resources.HelpersResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Resources.HelpersResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Resources.HelpersResources.CookieKeyMustBeProvided">
            <summary>
              Looks up a localized string similar to The cookie key must be provided.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Resources.HelpersResources.CookieNameMustBeProvided">
            <summary>
              Looks up a localized string similar to The cookie name must be provided.
            </summary>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Resources.ExtensionsResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Resources.ExtensionsResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Resources.ExtensionsResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Resources.ExtensionsResources.NotPossibleToDetermineAppAssembly">
            <summary>
              Looks up a localized string similar to It is not possible to determine the ASP.NET application assembly.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Resources.ExtensionsResources.UnableToDetectAssembly">
            <summary>
              Looks up a localized string similar to Unable to detect the main ASP.NET application assembly when there is no HttpContext.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Resources.ExtensionsResources.UnableToDetectAssemblyNoAppInstance">
            <summary>
              Looks up a localized string similar to Unable to detect the main ASP.NET application assembly when there is no ApplicationInstance on HttpContext.
            </summary>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Resources.CustomValidatorsResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Resources.CustomValidatorsResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Resources.CustomValidatorsResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Resources.CustomValidatorsResources.PropertiesDontExist">
            <summary>
              Looks up a localized string similar to Properties don&apos;t exist on target class type..
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Resources.CustomValidatorsResources.PropertiesNotIComparable">
            <summary>
              Looks up a localized string similar to The properties are not IComparable..
            </summary>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Resources.CustomValidatorsResources.PropertiesTypesDifferent">
            <summary>
              Looks up a localized string similar to The types of values of properties are different..
            </summary>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Session.ISessionSettingsProvider">
            <summary>
            Defines a contract for session providers. See also the <see cref="T:Volvo.NVS.Utilities.Web.Session.SessionSettingsProvider"/> class.
            </summary>
        </member>
        <member name="T:Volvo.NVS.Utilities.Web.Session.SessionSettingsProvider">
            <summary>
            Provides a common way of getting and setting values from/to the web session.
            </summary>
        </member>
        <member name="F:Volvo.NVS.Utilities.Web.Session.SessionSettingsProvider.session">
            <summary>
            HttpSession reference where objects will be retrieved from/stored to.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Session.SessionSettingsProvider.#ctor">
            <summary>
            Creates an instance of the session setting provider using the current <see cref="T:System.Web.HttpContext"/>.
            </summary>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Session.SessionSettingsProvider.#ctor(System.Web.HttpSessionStateBase)">
            <summary>
            Creates an instance of the session setting provider using the given session state.
            </summary>
            <param name="session">The session state where objects will be retrieved from/stored to.</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Session.SessionSettingsProvider.Get``1(System.String)">
            <summary>
            Gets a value from the Session given a key.
            </summary>
            <typeparam name="T">The type of the value to be returned</typeparam>
            <param name="key">The key used as the index for retrieving the value.</param>
            <returns>Returns the value associated with the given key. 
            If no value is found for the given key, the type default value ( default(T) ) is returned.</returns>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Session.SessionSettingsProvider.Set``1(System.String,``0)">
            <summary>
            Sets a value in the Session given a key.
            </summary>
            <typeparam name="T">The type of the value to be set</typeparam>
            <param name="key">The key used as the index for storing the value</param>
            <param name="value">The value to be stored</param>
        </member>
        <member name="M:Volvo.NVS.Utilities.Web.Session.SessionSettingsProvider.ValidateKeyParameter(System.String)">
            <summary>
            Validate if the key parameter exists and is valid. If invalid, 
            an <see cref="T:System.ArgumentException"/> exception is thrown.
            </summary>
            <param name="keyParam">The key parameter</param>
        </member>
        <member name="P:Volvo.NVS.Utilities.Web.Session.SessionSettingsProvider.Timeout">
            <summary>
            The session timeout in minutes.
            </summary>
        </member>
    </members>
</doc>
